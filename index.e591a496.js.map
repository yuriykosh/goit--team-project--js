{"mappings":"qhBAAAA,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,iMCAzD,I,EAAAC,EAAAJ,EAAA,S,iECAAK,EAAiB,IAAAC,IAAoBN,EAAA,SAAAO,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,WDQ5F,MAAMC,EAAUC,SAASC,cAAc,WACjCC,EAASF,SAASC,cAAc,YAChCE,EAAkBH,SAASC,cAAc,mBACzCG,EAAcC,EAAAC,WAAWC,iBACzBC,EAAWR,SAASC,cAAc,eA8ExCQ,eAAeC,EAAwBC,GACrCC,OAAOC,SAAS,CAAEC,IAAK,EAAGC,SAAU,WACpC,MAAMC,EAAcL,EAAMM,KAC1B,KACE,EAAAC,EAAAC,gBACA,MAAMC,QAAiBC,EAAAC,WAAWC,gBAAgBP,GAC5CQ,QAAmBH,EAAAC,WAAWG,iBAC9BC,KAAEA,GAASN,GACXO,QAAEA,GAAYD,EACdE,GAAS,EAAAC,EAAAC,kBAAiBH,EAASH,GAAYO,KAAK,IAC1DhC,EAAQiC,UAAYJ,C,CACpB,MAAOK,GAOP,OANA9B,EAAgB+B,UAAUC,IAAI,aAC9BC,QAAQC,IAAIJ,GACZlC,EAAQiC,UAAY,gFAENM,EAAA9C,4CAEPD,EAAAgD,OAAOC,QAAQ,gD,CACvB,SACC,EAAAtB,EAAAuB,c,EAwCJhC,eAAeiC,EAAuB/B,GACpCC,OAAOC,SAAS,CAAEC,IAAK,EAAGC,SAAU,WACpC,MAAM4B,EAAehC,EAAMM,KAE3B,KACE,EAAAC,EAAAC,gBACA,MAAMC,QAAiBC,EAAAC,WAAWsB,eAAeD,GAC3CnB,QAAmBH,EAAAC,WAAWG,iBAC9BC,KAAEA,GAASN,GACXO,QAAEA,GAAYD,EACdE,GAAS,EAAAC,EAAAC,kBAAiBH,EAASH,GAAYO,KAAK,IAC1DhC,EAAQiC,UAAYJ,C,CACpB,MAAOK,GAOP,OANA9B,EAAgB+B,UAAUC,IAAI,aAC9BpC,EAAQiC,UAAY,gFAENM,EAAA9C,6CAEd4C,QAAQC,IAAIJ,GACL1C,EAAAgD,OAAOC,QAAQ,gD,CACvB,SACC,EAAAtB,EAAAuB,c,EA7JJvC,EAAO2C,iBAAiB,UAYxB,SAAsBC,GACpBA,EAAEC,iBAEF,MAAMC,EAAcF,EAAEG,cAAcC,SAASC,MAAMC,MAAMC,OAEzD,IAAKL,EACH,OAAOzD,EAAAgD,OAAOC,QAAQ,wCASxB,GANArC,EAAgB+B,UAAUC,IAAI,aAC9B9B,EAAAC,WAAWgD,IAAI,YAAaZ,GAC5BrC,EAAAC,WAAWgD,IAAI,YAAa5C,GAC5BL,EAAAC,WAAWiD,GAAG,YAAa7C,GAC3BW,EAAAC,WAAW6B,MAAQH,EAEM,KAArB3B,EAAAC,WAAW6B,MACb,OAAO5D,EAAAgD,OAAOC,QAAQ,wCAGxBtC,EAAOsD,QACPzD,EAAQiC,UAAY,GAItBvB,iBACE,KACE,EAAAS,EAAAC,gBACA,MAAMC,QAAiBC,EAAAC,WAAWC,gBAAgBnB,GAC5CoB,QAAmBH,EAAAC,WAAWG,iBAC9BC,KAAEA,GAASN,GACXO,QAAEA,EAAO8B,cAAEA,GAAkB/B,EAInC,GAFArB,EAAAC,WAAWkD,MAAMC,GAEM,IAAnB9B,EAAQ+B,OAMV,OALA,EAAAxC,EAAAuB,eACA1C,EAAQiC,UAAY,gFAERM,EAAA9C,4CAELD,EAAAgD,OAAOC,QACZ,4EAIkB,IAAlBiB,GACFlE,EAAAgD,OAAOoB,QAAQ,oBAAoBF,aAGrC,MAAM7B,GAAS,EAAAC,EAAAC,kBAAiBH,EAASH,GAAYO,KAAK,IAC1DhC,EAAQiC,UAAYJ,EACpBzB,EAAgB+B,UAAU0B,OAAO,Y,CACjC,MAAO3B,GAMP,OALAG,QAAQC,IAAIJ,GACZlC,EAAQiC,UAAY,gFAENM,EAAA9C,4CAEPD,EAAAgD,OAAOC,QAAQ,gD,CACvB,SACC,EAAAtB,EAAAuB,c,EAvCFoB,E,IAhCFjD,OAAOiC,iBAAiB,SAAUiB,EAAAC,UAClCvD,EAASqC,iBAAiB,QAASiB,EAAAE,YAEnCzE,EAAAgD,OAAO0B,KAAK,CACVC,MAAO,QACPC,cAAc,IA8FhB1D,iBACE,KACE,EAAAS,EAAAC,gBACA,MAAMC,QAAiBC,EAAAC,WAAWsB,eAAexC,GAC3CoB,QAAmBH,EAAAC,WAAWG,iBAC9BC,KAAEA,GAASN,GACXO,QAAEA,EAAO8B,cAAEA,GAAkB/B,EAInC,GAFArB,EAAAC,WAAWkD,MAAMC,GAEM,IAAnB9B,EAAQ+B,OAMV,OALA,EAAAxC,EAAAuB,eACA1C,EAAQiC,UAAY,gFAERM,EAAA9C,4CAELD,EAAAgD,OAAOC,QACZ,2EAIJ,MAAMZ,GAAS,EAAAC,EAAAC,kBAAiBH,EAASH,GAAYO,KAAK,IAC1DhC,EAAQiC,UAAYJ,EACpBzB,EAAgB+B,UAAU0B,OAAO,Y,CACjC,MAAO3B,GAMP,OALAG,QAAQC,IAAIJ,GACZlC,EAAQiC,UAAY,gFAENM,EAAA9C,4CAEPD,EAAAgD,OAAOC,QAAQ,gD,CACvB,SACC,EAAAtB,EAAAuB,c,EA3HJ2B,GACA/D,EAAAC,WAAWiD,GAAG,YAAab,G","sources":["node_modules/@parcel/runtime-js/lib/runtime-aa6b0082fddce4b5.js","src/js/searchMovies.js","node_modules/@parcel/runtime-js/lib/runtime-c578acf25ab98737.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5ZPII\\\":\\\"index.e591a496.js\\\",\\\"32lSb\\\":\\\"empty-list.42b24b97.gif\\\",\\\"5UbS1\\\":\\\"index.6cfcdded.css\\\",\\\"b9auz\\\":\\\"index.6aeb38d1.js\\\"}\"));","import { Notify } from 'notiflix';\nimport { ApiService } from './ApiServise';\nimport { createMainMarkup } from './markUp';\nimport { spinnerStart, spinnerStop } from './spinner';\nimport { pagination } from './tuiPagination';\nimport { onScroll, onToTopBtn } from \"./scroll-to-top\";\nimport empty from '../images/empty-list.gif';\n\nconst gallery = document.querySelector('.movies');\nconst formEl = document.querySelector('.js-form');\nconst paginationBlock = document.querySelector('.tui-pagination')\nconst currentPage = pagination.getCurrentPage();\nconst toTopBtn = document.querySelector('.btn-to-top');\n\nformEl.addEventListener('submit', onFormSubmit);\nwindow.addEventListener('scroll', onScroll);\ntoTopBtn.addEventListener('click', onToTopBtn);\n\nNotify.init({\n  width: '400px',\n  clickToClose: true,\n});\n\nfetchTrendMovies();\npagination.on('afterMove', loadMoreTrendingMovies);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  \n  const searchValue = e.currentTarget.elements.query.value.trim();\n\n  if (!searchValue) {\n    return Notify.failure('Please insert the name of the movie.');\n  }\n\n  paginationBlock.classList.add('is-hidden');\n  pagination.off('afterMove', loadMoreTrendingMovies);\n  pagination.off('afterMove', loadMoreSearchingPhotos);\n  pagination.on('afterMove', loadMoreSearchingPhotos);\n  ApiService.query = searchValue;\n\n  if (ApiService.query === '') {\n    return Notify.failure('Please insert the name of the movie.');\n  }\n\n  formEl.reset();\n  gallery.innerHTML = '';\n  fetchMovies();\n}\n\nasync function fetchMovies() {\n  try {\n    spinnerStart();\n    const response = await ApiService.getMoviesByName(currentPage);\n    const genresList = await ApiService.getGenresList();\n    const { data } = response;\n    const { results, total_results } = data;\n\n    pagination.reset(total_results);\n\n    if (results.length === 0) {\n      spinnerStop();\n      gallery.innerHTML = `<li>\n      <p class=\"empty__notify\">where is everyone?</p>\n      <img src=\"${empty}\" alt=\"The list is empty.\"/>\n    </li>`;\n      return Notify.failure(\n        'Sorry, there are no movies matching your search query. Please try again.'\n      );\n    }\n\n    if (total_results !== 0) {\n      Notify.success(`Hooray! We found ${total_results} movies.`);\n    }\n\n    const markUp = createMainMarkup(results, genresList).join('');\n    gallery.innerHTML = markUp;\n    paginationBlock.classList.remove('is-hidden');\n  } catch (error) {\n    console.log(error);\n    gallery.innerHTML = `<li>\n      <p class=\"empty__notify\">where is everyone?</p>\n      <img src=\"${empty}\" alt=\"The list is empty.\"/>\n    </li>`;\n    return Notify.failure('Something went wrong. Please try again later.');\n  } finally {\n    spinnerStop();\n  }\n}\n\nasync function loadMoreSearchingPhotos(event) {\n  window.scrollTo({ top: 0, behavior: 'smooth' });\n  const currentPage = event.page;\n  try {\n    spinnerStart();\n    const response = await ApiService.getMoviesByName(currentPage);\n    const genresList = await ApiService.getGenresList();\n    const { data } = response;\n    const { results } = data;\n    const markUp = createMainMarkup(results, genresList).join('');\n    gallery.innerHTML = markUp;\n  } catch (error) {\n    paginationBlock.classList.add('is-hidden');\n    console.log(error);\n    gallery.innerHTML = `<li>\n      <p class=\"empty__notify\">where is everyone?</p>\n      <img src=\"${empty}\" alt=\"The list is empty.\"/>\n    </li>`;\n    return Notify.failure('Something went wrong. Please try again later.');\n  } finally {\n    spinnerStop();\n  }\n}\n\nasync function fetchTrendMovies() {\n  try {\n    spinnerStart();\n    const response = await ApiService.getTrendMovies(currentPage);\n    const genresList = await ApiService.getGenresList();\n    const { data } = response;\n    const { results, total_results } = data;\n\n    pagination.reset(total_results);    \n    \n    if (results.length === 0) {\n      spinnerStop();\n      gallery.innerHTML = `<li>\n      <p class=\"empty__notify\">where is everyone?</p>\n      <img src=\"${empty}\" alt=\"The list is empty.\"/>\n    </li>`;\n      return Notify.failure(\n        'Trending movies are not available. Please insert the name of the movie.'\n      );\n    }\n\n    const markUp = createMainMarkup(results, genresList).join('');\n    gallery.innerHTML = markUp;\n    paginationBlock.classList.remove('is-hidden');\n  } catch (error) {\n    console.log(error);\n    gallery.innerHTML = `<li>\n      <p class=\"empty__notify\">where is everyone?</p>\n      <img src=\"${empty}\" alt=\"The list is empty.\"/>\n    </li>`;\n    return Notify.failure('Something went wrong. Please try again later.');\n  } finally {\n    spinnerStop();\n  }\n}\n\nasync function loadMoreTrendingMovies(event) {\n  window.scrollTo({ top: 0, behavior: 'smooth' });\n  const currentsPage = event.page;\n\n  try {\n    spinnerStart();\n    const response = await ApiService.getTrendMovies(currentsPage);\n    const genresList = await ApiService.getGenresList();\n    const { data } = response;\n    const { results } = data;\n    const markUp = createMainMarkup(results, genresList).join('');\n    gallery.innerHTML = markUp;\n  } catch (error) {\n    paginationBlock.classList.add('is-hidden');\n    gallery.innerHTML = `<li>\n      <p class=\"empty__notify\">where is everyone?</p>\n      <img src=\"${empty}\" alt=\"The list is empty.\" />\n    </li>`;\n    console.log(error);\n    return Notify.failure('Something went wrong. Please try again later.');\n  } finally {\n    spinnerStop();\n  }\n}","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"32lSb\")).toString();"],"names":["parcelRequire","register","JSON","parse","$7Y9D8","$734b9ce990a5e2e3$exports","URL","resolve","import","meta","url","toString","$4a9ea052b238628e$var$gallery","document","querySelector","$4a9ea052b238628e$var$formEl","$4a9ea052b238628e$var$paginationBlock","$4a9ea052b238628e$var$currentPage","$jjYMT","pagination","getCurrentPage","$4a9ea052b238628e$var$toTopBtn","async","$4a9ea052b238628e$var$loadMoreSearchingPhotos","event","window","scrollTo","top","behavior","currentPage1","page","$04jNI","spinnerStart","response","$cnvsZ","ApiService","getMoviesByName","genresList","getGenresList","data","results","markUp","$kkejX","createMainMarkup","join","innerHTML","error","classList","add","console","log","$parcel$interopDefault","Notify","failure","spinnerStop","$4a9ea052b238628e$var$loadMoreTrendingMovies","currentsPage","getTrendMovies","addEventListener","e","preventDefault","searchValue","currentTarget","elements","query","value","trim","off","on","reset","total_results","length","success","remove","$4a9ea052b238628e$var$fetchMovies","$dpZmf","onScroll","onToTopBtn","init","width","clickToClose","$4a9ea052b238628e$var$fetchTrendMovies"],"version":3,"file":"index.e591a496.js.map"}