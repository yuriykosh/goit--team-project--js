{"mappings":"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","sources":["src/js/modal.js","src/js/player.js","src/js/modalBtnLogics.js"],"sourcesContent":["import { ApiService } from './ApiServise';\nimport { Notify } from 'notiflix';\nimport { spinnerStart, spinnerStop } from './spinner';\nimport findMovieTrailer from './player';\nimport onBtnClick from './modalBtnLogics';\nimport 'material-icons/iconfont/material-icons.css';\n\nconst closeModalBtn = document.querySelector('[data-modal-close]');\nconst modal = document.querySelector('[data-modal]');\nconst movies = document.querySelector('.movies');\nconst wrapper = document.querySelector('.movie-modal');\n\n// const btnAddToWatched = document.querySelector('.btn_add_watched');\n// const btnAddToQueue = document.querySelector('.btn_add_queue');\n\nmovies.addEventListener('click', clickList);\n\nfunction clickModal(event) {\n  if (event.target.nodeName === 'BUTTON') {\n    return;\n  };\n\n  if (\n    ((!event.target.closest('.movie-modal') ||\n      event.target.closest('[data-modal-close]')) &&\n      !event.keyCode) ||\n    event.keyCode === 27\n  ) {\n    closeModal();\n    document.removeEventListener('keydown', clickModal);\n    modal.removeEventListener('click', clickModal);\n  }\n}\n\nfunction closeModal() {\n  modal.classList.add('is-hidden');\n  document.body.style.overflow = 'visible';\n  const markupWrapper = document.querySelector('.movie-modal__wrapper');\n  modal.removeAttribute(\"id\");\n  markupWrapper.remove();\n  \n}\n\nfunction clickList(event) {\n  const moviesCard = event.target.closest('.movies__item');\n  if (moviesCard) {\n    modal.setAttribute('id', moviesCard.id);\n    // btnAddToWatched.setAttribute('data-id', moviesCard.id);\n    // btnAddToQueue.setAttribute('data-id', moviesCard.id);\n    openModal(moviesCard.id);\n  }\n}\n\nfunction openModal(id) {\n  modal.classList.remove('is-hidden');\n  document.body.style.overflow = 'hidden';\n  fetchModalMarkup(id);\n  modal.addEventListener('click', clickModal);\n  document.addEventListener('keydown', clickModal);\n}\n\nasync function fetchModalMarkup(id) {\n  try {\n    spinnerStart();\n    const response = await ApiService.getMoviesById(id);\n    const { data } = response;\n\n    const markUp = createModalMarkup(data);\n    wrapper.insertAdjacentHTML('beforeend', markUp);\n\n    const btnAddToWatched = document.querySelector('.btn_add_watched');\n    const btnAddToQueue = document.querySelector('.btn_add_queue');\n    btnAddToWatched.addEventListener('click', (event) => onBtnClick(event, 'WATCHED'));\n    btnAddToQueue.addEventListener('click', (event) => onBtnClick(event, 'QUEUE'));\n    const playBtn = document.querySelector('.js-playBtn');\n    playBtn.addEventListener('click', onPlayTrailer);\n  } catch (error) {\n    console.log(error);\n    return Notify.failure('Something went wrong. Please try again later.');\n  } finally {\n    spinnerStop();\n  }\n}\n\nfunction createModalMarkup(data) {\n  const {genres, poster_path, title, vote_average, id, vote_count, popularity, original_title, overview} = data;\n  let watchedText = '';\n  let queueText = '';\n  // const x = JSON.parse(localStorage.getItem('WATCHED'));\n  // console.log(x);\n  // const storageArray = !JSON.parse(localStorage.getItem('WATCHED')) ? [JSON.parse(localStorage.getItem('WATCHED'))] : [];\n\n  // console.log(storageArray);\n  // if (!storageArray) {\n  //   watchedText = 'add to watched';\n  // } else {\n  //   watchedText = !storageArray.find(item => Number(item) === id) ? \"add to watched\" : \"remove from watched\";\n  // }\n\n  // const queueArray = !JSON.parse(localStorage.getItem('QUEUE')) ? [JSON.parse(localStorage.getItem('QUEUE'))] : [];\n  // if (!queueArray) {\n  //   queueText = 'add to watched';\n  // } else {\n  //   queueText = !queueArray.find(item => Number(item) === id) ? \"add to queue\" : \"remove from queue\";\n  // }\n\n  const defaultImage = `https://raw.githubusercontent.com/yuriykosh/goit--team-project--js/main/src/images/main-home/poster-filler-desktop.jpeg`;\n  const posterLink = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n  const genresList = genres.map(genre => genre.name);\n  const genresItems = genresList.length > 2 ? [genresList[0], genresList[1], 'Other'].join(', ') : genresList.join(', ');\n  const voteAverage = vote_average.toFixed(1);\n  const popul = popularity.toFixed(1);\n\n  return `<div class=\"movie-modal__wrapper\">\n    <div class=\"movie-modal__imgBox\">\n    <button class=\"movie-modal__video-btn js-playBtn\">\n      <span class=\"material-icons-round\" style=\"font-size: 80px\">play_circle</span>\n    </button>\n    <img class=\"movie-modal__imgBox__img\" src=${posterLink}\n      alt=${title} onerror=\"this.onerror=null;this.src='${defaultImage}';\"/>\n  </div>\n  <div>\n    <div>\n      <h2 class=\"movie-modal__title\">${title}</h2>\n      <ul class=\"movie-modal__info\">\n        <li class=\"movie-modal__info__item\">\n          <p class=\"movie-modal__info__item__attribute\">Vote / Votes</p>\n          <p class=\"movie-modal__info__item__value\">\n            <span class=\"movie-modal__info__item__value__marker\">${voteAverage}</span><span\n              class=\"movie-modal__info__item__value-slash\">/</span>\n            <span class=\"movie-modal__info__item__value__marker--grey\">${vote_count}</span>\n          </p>\n        </li>\n        <li class=\"movie-modal__info__item\">\n          <p class=\"movie-modal__info__item__attribute\">Popularity</p>\n          <p class=\"movie-modal__info__item__value\">${popul}</p>\n        </li>\n        <li class=\"movie-modal__info__item\">\n          <p class=\"movie-modal__info__item__attribute\">Original Title</p>\n          <p class=\"movie-modal__info__item__value\">${original_title}</p>\n        </li>\n        <li class=\"movie-modal__info__item\">\n          <p class=\"movie-modal__info__item__attribute\">Genre</p>\n          <p class=\"movie-modal__info__item__value\">${genresItems}</p>\n        </li>\n      </ul>\n    </div>\n    <div class=\"movie-modal__about\">\n      <h3 class=\"movie-modal__about-title\">About</h3>\n      <p class=\"movie-modal__desc\">\n        ${overview}\n      </p>\n    </div>\n    <div class=\"movie-modal__button\">\n      <button id=\"add-to-watched\" class=\"movie-modal__button__item btn_add_watched\" data-id=${id}>\n        ${watchedText}\n      </button>\n      <button id=\"add-to-queue\" class=\"movie-modal__button__item btn_add_queue\" data-id=${id}>\n        ${queueText}\n      </button>\n    </div>\n  </div>\n</div>`\n}\n\nfunction onPlayTrailer(event) {\n  const moviesId = event.target.closest('[data-modal]').id;\n  findMovieTrailer(moviesId);\n}","import { ApiService } from './ApiServise';\nimport { Notify } from 'notiflix';\n\nconst player = document.querySelector('.player');\nconst modal = document.querySelector('[data-modal]');\n\nmodal.addEventListener('click', onClose);\n\nexport default async function findMovieTrailer(id) {\n    try {\n      const response = await ApiService.getMovieTreiler(id);\n      const { data } = response;\n  \n      const videoKey = data.results.find(\n        result => result.type === 'Trailer' && result.official\n      ).key;\n      videoID = videoKey;\n  \n      createPlayer(videoID);\n      \n      window.addEventListener('keydown', onEscPress)\n  \n    } catch (error) {\n      console.log(error);\n      return Notify.failure('Something went wrong. Please try again later.');\n    }\n  }\n  \n  function createPlayer (id) {\n    const frame = `<iframe class=\"player__frame\" id=\"player\" type=\"text/html\"\n    src=\"http://www.youtube.com/embed/${id}?enablejsapi=1&origin=http://example.com\"frameborder=\"0\"></iframe>`;\n    player.innerHTML = frame;\n  }\n\n  function onEscPress(e) {\n    if (e.key !== 'Escape') {\n      return\n    }\n    player.innerHTML = '';\n    window.removeEventListener('keydown', onEscPress)\n  }\n\n  function onClose(e) {\n    if (e.target !== player) {\n      player.innerHTML = '';\n    }\n  }\n","const onBtnClick = function (event, storageKey) {\n    let text = event.target.textContent;\n    const movieId = event.target.dataset.id;\n    // let queueMovie = [JSON.parse(localStorage.getItem(storageKey))];\n    if(!queueMovie){\n        queueMovie = [];\n    }\n\n    if (event.target.textContent.includes('add to')) {\n        event.target.textContent = text.replace('add to', 'remove from');\n        queueMovie = [...queueMovie, \"movieId\"];\n        // localStorage.removeItem(storageKey);\n        // localStorage.setItem(storageKey, queueMovie);\n    } else{\n        event.target.textContent = text.replace('remove from', 'add to');\n        queueMovie = queueMovie.filter((item) => {item !== movieId})\n        // localStorage.removeItem(storageKey);\n        // localStorage.setItem(storageKey, queueMovie);\n    }\n\n\n    // if (tempMovie){\n    //     return;\n    // };\n    \n    // queueMovie.push(movieId);\n    \n    // localStorage.setItem(storageKey, JSON.stringify(queueMovie));\n\n\n\n  \n    // let localWatched = JSON.parse(localStorage.getItem('WATCHED'));\n    // if (!localWatched) {\n    //   watchedText = 'add to watched';\n    // } else {\n    //   watchedText = !localWatched.find(item => Number(item) === id) ? \"add to watched\" : \"remove from watched\";\n    // }\n  \n    // let localQueue = JSON.parse(localStorage.getItem('QUEUE'));\n    // if (!localQueue) {\n    //   queueText = 'add to watched';\n    // } else {\n    //   queueText = !localQueue.find(item => Number(item) === id) ? \"add to queue\" : \"remove from queue\";\n    // }\n}; \n\n// btnAddToWatched.addEventListener('click', (event) => onBtnClick(event, 'WATCHED'));\n// btnAddToQueue.addEventListener('click', (event) => onBtnClick(event, 'QUEUE'));\n\nexport default onBtnClick;"],"names":["$bpxeT","parcelRequire","$51d3c906e753f86f$var$player","document","querySelector","id","$51d3c906e753f86f$var$_findMovieTrailer","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","response","data","videoKey","$2nBDz","ApiService","getMovieTreiler","_ctx","sent","results","find","result","type","official","key","videoID","$51d3c906e753f86f$var$createPlayer","window","addEventListener","$51d3c906e753f86f$var$onEscPress","console","log","t0","$6JpON","Notify","failure","frame","concat","innerHTML","e","removeEventListener","target","$8nrFW","$8bafa3b920b38f0f$export$2e2bcd8739ae039","event","storageKey","text","textContent","dataset","queueMovie","includes","replace","filter","item","$40873ecf3c18e122$var$modal","$40873ecf3c18e122$var$movies","$40873ecf3c18e122$var$wrapper","$40873ecf3c18e122$var$clickModal","nodeName","closest","keyCode","classList","add","body","style","overflow","markupWrapper","removeAttribute","remove","$40873ecf3c18e122$var$closeModal","$40873ecf3c18e122$var$_fetchModalMarkup","markUp","btnAddToWatched","btnAddToQueue","$j1lrD","spinnerStart","getMoviesById","$40873ecf3c18e122$var$createModalMarkup","insertAdjacentHTML","$40873ecf3c18e122$var$onPlayTrailer","spinnerStop","genres","poster_path","title","vote_average","vote_count","popularity","original_title","overview","posterLink","genresList","map","genre","name","genresItems","length","join","voteAverage","toFixed","popul","$51d3c906e753f86f$export$2e2bcd8739ae039","moviesCard","setAttribute","$40873ecf3c18e122$var$fetchModalMarkup"],"version":3,"file":"index.9537d7e2.js.map"}