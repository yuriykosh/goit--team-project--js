{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,oDAMA,MAAMC,EAAUC,SAASC,cAAc,WACjCC,EAAkBF,SAASC,cAAc,mBACzCE,EAAWH,SAASC,cAAc,eAClCG,EAAcC,EAAAC,WAAWC,iBAE/BC,OAAOC,iBAAiB,SAAUC,EAAAC,UAClCR,EAASM,iBAAiB,QAASC,EAAAE,YAGb,IAAlBC,EAAS,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAGtTC,EAAaD,EAAOE,OAgBxB,SAASC,EAAYC,GACnB,IAAI,IAAIC,EAAqB,IAAlBD,EAAa,GAAUC,EAAe,GAAbD,EAAiBC,GAAG,EAAG,CACzD,GAAIA,IAAMJ,EACR,OAEFK,EAAcN,EAAOK,G,EAqBvBE,eAAeD,EAAcE,GAC7B,KACE,EAAAC,EAAAC,gBACA,MAAMC,QAAiB3B,EAAA4B,WAAWC,cAAcL,IAC1CM,KAAEA,GAASH,EAEXI,EAcV,SAAyBD,GACrB,MAAME,OAACA,EAAMC,YAAEA,EAAWC,aAAEA,EAAYC,MAAEA,EAAKC,aAAEA,EAAYZ,GAAEA,GAAOM,EAEhEO,EAAa,mCAAmCJ,IAChDK,EAAcJ,EAAaK,MAAM,EAAG,GACpCC,EAAaR,EAAOS,KAAIC,GAASA,EAAMC,OACvCC,EAAcJ,EAAWtB,OAAS,EAAI,CAACsB,EAAW,GAAIA,EAAW,GAAI,SAASK,KAAK,MAAQL,EAAWK,KAAK,MAC3GC,EAAcV,EAAaW,QAAQ,GAE1C,MAAO,oCACuBvB,oEAGpBW,SAAaE,+HAGUF,2FAEUS,gEACMN,4DACHQ,mD,CAlCvBE,CAAgBlB,GACtC5B,EAAQ+C,mBAAmB,YAAalB,GACxC1B,EAAgB6C,UAAUC,OAAO,Y,CAEnC,MAAMC,GAGF,OAFAC,QAAQC,IAAIF,GACZ/C,EAAgB6C,UAAUK,IAAI,aACvBC,EAAAC,OAAOC,QAAQ,gD,CACzB,SAEC,EAAAjC,EAAAkC,c,EAxDJnD,EAAAC,WAAWmD,MAAM3C,IACjB,EAAAQ,EAAAC,gBAKA,SAAwBmC,GACtB,GAAsB,IAAlBA,EAAO3C,OAEP,OADA,EAAAO,EAAAkC,eACOH,EAAAC,OAAOC,QAAQ,2CAE5BvC,EAAYZ,E,CATZuD,CAAe9C,GAEfR,EAAAC,WAAWsD,GAAG,aAmBd,SAAkBC,GACd9D,EAAQ+D,UAAY,GACpB,MAAMC,EAAcF,EAAMG,KAE1B,KACE,EAAA1C,EAAAC,gBACAP,EAAY+C,GACZ7D,EAAgB6C,UAAUC,OAAO,Y,CACjC,MAAOC,GAGP,OAFA/C,EAAgB6C,UAAUK,IAAI,aAC9BF,QAAQC,IAAIF,GACLI,EAAAC,OAAOC,QAAQ,gD,CACvB,SACC,EAAAjC,EAAAkC,c","sources":["src/js/loadGalleryPage.js"],"sourcesContent":["import { ApiService } from \"./ApiServise\";\nimport { spinnerStart, spinnerStop } from \"./spinner\";\nimport { Notify } from \"notiflix\";\nimport { pagination } from './tuiPagination';\nimport { onScroll, onToTopBtn } from \"./scroll-to-top\";\n\nconst gallery = document.querySelector('.movies');   \nconst paginationBlock = document.querySelector('.tui-pagination')\nconst toTopBtn = document.querySelector('.btn-to-top');\nconst currentPage = pagination.getCurrentPage();\n\nwindow.addEventListener('scroll', onScroll);\ntoTopBtn.addEventListener('click', onToTopBtn);\n\n// Запрашиваем данные из localstorage для idList\nlet idList = [696157, 696157, 696157, 696157, 696157, 696157, 696157, 696157, 696157, 696157, 696157, 696157, 696157, 696157, 696157, 696157, 696157, 696157, 696157, 696157, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 646389, 646389, 646389, 646389, 646389, 646389];  ///Пример\n\n\nlet totalItems = idList.length;\n\npagination.reset(totalItems);\nspinnerStart();\nloadMoviesList(idList);\n\npagination.on('afterMove', loadMore);   \n   \nfunction loadMoviesList(idList) {\n  if (idList.length === 0) {\n      spinnerStop()\n      return Notify.failure('There no movies added to your list yet.');\n  }\nloadOnePage(currentPage);;\n}   \n\nfunction loadOnePage(pageNumber) {\n  for(let i=(pageNumber - 1) * 20 ; i<pageNumber * 20; i+=1) {\n    if (i === totalItems ) {\n      return;\n    }\n    findMovieById(idList[i]);\n  }\n}\n\nfunction loadMore(event) {\n    gallery.innerHTML = '';\n    const currentPage = event.page;\n\n    try {\n      spinnerStart();\n      loadOnePage(currentPage);\n      paginationBlock.classList.remove('is-hidden')\n    } catch (error) {\n      paginationBlock.classList.add('is-hidden');\n      console.log(error);\n      return Notify.failure('Something went wrong. Please try again later.');\n    } finally {\n      spinnerStop();\n    }\n}\n\n  async function findMovieById(id) {\n  try {\n    spinnerStart()\n    const response = await ApiService.getMoviesById(id);\n    const { data } = response;\n\n    const galleryMarkup = createNewMarkup(data);\n    gallery.insertAdjacentHTML('beforeend', galleryMarkup);\n    paginationBlock.classList.remove('is-hidden')\n  }\n  catch(error) {\n      console.log(error);\n      paginationBlock.classList.add('is-hidden')\n      return Notify.failure('Something went wrong. Please try again later.');\n  }\n  finally {\n    spinnerStop();\n  }\n}\n\nfunction createNewMarkup(data) {\n    const {genres, poster_path, release_date, title, vote_average, id } = data;\n\n    const posterLink = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n    const releaseYear = release_date.slice(0, 4);\n    const genresList = genres.map(genre => genre.name);\n    const genresItems = genresList.length > 2 ? [genresList[0], genresList[1], 'Other'].join(', ') : genresList.join(', ');\n    const voteAverage = vote_average.toFixed(1);\n\n   return `\n   <li class=\"movies__item\" id=${id}>\n      <div class=\"movies__wrapper\">\n      <img \n       alt=${title} src=${posterLink} class=\"movies__poster\" loading=\"lazy\">\n      </div>\n      <div class=\"movies__meta\">\n        <h2 class=\"movies__title\">${title}</h2>\n        <div class=\"movies__desc\">\n          <span class=\"movies__desc-genres\">${genresItems}</span>|\n          <span class=\"movies__desc-release-year\">${releaseYear}</span>\n          <span class=\"movies__vote is-hidden\">${voteAverage}</span>\n        </div>\n      </div>\n    </li>`;\n   }\n\n\n"],"names":["$cnvsZ","parcelRequire","$b5fd3b73934892c1$var$gallery","document","querySelector","$b5fd3b73934892c1$var$paginationBlock","$b5fd3b73934892c1$var$toTopBtn","$b5fd3b73934892c1$var$currentPage","$jjYMT","pagination","getCurrentPage","window","addEventListener","$dpZmf","onScroll","onToTopBtn","$b5fd3b73934892c1$var$idList","$b5fd3b73934892c1$var$totalItems","length","$b5fd3b73934892c1$var$loadOnePage","pageNumber","i","$b5fd3b73934892c1$var$findMovieById","async","id","$04jNI","spinnerStart","response","ApiService","getMoviesById","data","galleryMarkup","genres","poster_path","release_date","title","vote_average","posterLink","releaseYear","slice","genresList","map","genre","name","genresItems","join","voteAverage","toFixed","$b5fd3b73934892c1$var$createNewMarkup","insertAdjacentHTML","classList","remove","error","console","log","add","$7Y9D8","Notify","failure","spinnerStop","reset","idList1","$b5fd3b73934892c1$var$loadMoviesList","on","event","innerHTML","currentPage1","page"],"version":3,"file":"my-library.c4341c0e.js.map"}