{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,iEAKMC,EAAUC,SAASC,cAAc,WACjCC,EAAkBF,SAASC,cAAc,mBACzCE,EAAcC,EAAAC,WAAWC,iBAG3BC,EAAS,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAGtTC,EAAaD,EAAOE,OAgBxB,SAASC,EAAYC,GACnB,IAAI,IAAIC,EAAqB,IAAlBD,EAAa,GAAUC,EAAe,GAAbD,EAAiBC,GAAG,EAAG,CACzD,GAAIA,IAAMJ,EACR,OAEFK,EAAcN,EAAOK,G,WAqBRC,EAAcC,G,OAAdC,EAAaC,MAAAC,KAAAC,U,UAAbH,I,OAAAA,EAAfI,EAAAtB,EAAA,CAAAsB,EAAAC,GAAAC,MAAA,SAAAC,EAA6BR,G,IAGrBS,EACEC,EAEFC,E,mFAJN,EAAAC,EAAAC,gB,SACuBC,EAAAC,WAAWC,cAAchB,G,OAA1CS,EAAQQ,EAAAC,KACRR,EAAWD,EAATC,KAEFC,EAAgBQ,EAAgBT,GACtCzB,EAAQmC,mBAAmB,YAAaT,GACxCvB,EAAgBiC,UAAUC,OAAO,a,yDAG/BC,QAAQC,IAAGP,EAAAQ,IACXrC,EAAgBiC,UAAUK,IAAI,a,kBACvBC,EAAAC,OAAOC,QAAQ,kD,0BAGxB,EAAAjB,EAAAkB,e,8EAhB0B5B,MAAAC,KAAAC,U,CAoB9B,SAASe,EAAgBT,GACrB,IAAOqB,EAA+DrB,EAA/DqB,OAAQC,EAAuDtB,EAAvDsB,YAAaC,EAA0CvB,EAA1CuB,aAAcC,EAA4BxB,EAA5BwB,MAAOC,EAAqBzB,EAArByB,aAAcnC,EAAOU,EAAPV,GAEzDoC,EAAa,mCAA+CC,OAAZL,GAChDM,EAAcL,EAAaM,MAAM,EAAG,GACpCC,EAAaT,EAAOU,KAAI,SAAAC,G,OAASA,EAAMC,I,IACvCC,EAAcJ,EAAW7C,OAAS,EAAI,CAAC6C,EAAW,GAAIA,EAAW,GAAI,SAASK,KAAK,MAAQL,EAAWK,KAAK,MAC3GC,EAAcX,EAAaY,QAAQ,GAE1C,MAAO,oCAIGV,OAHoBrC,EAAG,oEAGVqC,OAAbH,EAAM,SAGiBG,OAHVD,EAAW,+HAKSC,OAFVH,EAAM,2FAGUG,OADNO,EAAY,gEAETP,OADGC,EAAY,4DACHD,OAAZS,EAAY,mD,CAhF7DxD,EAAAC,WAAWyD,MAAMtD,IACjB,EAAAkB,EAAAC,gBAKA,SAAwBoC,GACtB,GAAsB,IAAlBA,EAAOtD,OAEP,OADA,EAAAiB,EAAAkB,eACOH,EAAAC,OAAOC,QAAQ,2CAE5BjC,EAAYP,E,CATZ6D,CAAezD,GAEfH,EAAAC,WAAW4D,GAAG,aAmBd,SAAkBC,GACdnE,EAAQoE,UAAY,GACpB,IAAMC,EAAcF,EAAMG,KAC1BhC,QAAQC,IAAI8B,GACZ,KACE,EAAA1C,EAAAC,gBACAjB,EAAY0D,GACZlE,EAAgBiC,UAAUC,OAAO,Y,CACjC,MAAOkC,GAGP,OAFApE,EAAgBiC,UAAUK,IAAI,aAC9BH,QAAQC,IAAIgC,GACL7B,EAAAC,OAAOC,QAAQ,gD,CACvB,SACC,EAAAjB,EAAAkB,c","sources":["src/js/loadGalleryPage.js"],"sourcesContent":["import { ApiService } from \"./ApiServise\";\nimport { spinnerStart, spinnerStop } from \"./spinner\";\nimport { Notify } from \"notiflix\";\nimport { pagination } from './tuiPagination';\n\nconst gallery = document.querySelector('.movies');   \nconst paginationBlock = document.querySelector('.tui-pagination')\nconst currentPage = pagination.getCurrentPage();\n\n// Запрашиваем данные из localstorage для idList\nlet idList = [696157, 696157, 696157, 696157, 696157, 696157, 696157, 696157, 696157, 696157, 696157, 696157, 696157, 696157, 696157, 696157, 696157, 696157, 696157, 696157, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 597, 646389, 646389, 646389, 646389, 646389, 646389];  ///Пример\n\n\nlet totalItems = idList.length;\n\npagination.reset(totalItems);\nspinnerStart();\nloadMoviesList(idList);\n\npagination.on('afterMove', loadMore);   \n   \nfunction loadMoviesList(idList) {\n  if (idList.length === 0) {\n      spinnerStop()\n      return Notify.failure('There no movies added to your list yet.');\n  }\nloadOnePage(currentPage);;\n}   \n\nfunction loadOnePage(pageNumber) {\n  for(let i=(pageNumber - 1) * 20 ; i<pageNumber * 20; i+=1) {\n    if (i === totalItems ) {\n      return;\n    }\n    findMovieById(idList[i]);\n  }\n}\n\nfunction loadMore(event) {\n    gallery.innerHTML = '';\n    const currentPage = event.page;\n    console.log(currentPage);\n    try {\n      spinnerStart();\n      loadOnePage(currentPage);\n      paginationBlock.classList.remove('is-hidden')\n    } catch (error) {\n      paginationBlock.classList.add('is-hidden');\n      console.log(error);\n      return Notify.failure('Something went wrong. Please try again later.');\n    } finally {\n      spinnerStop();\n    }\n}\n\n  async function findMovieById(id) {\n  try {\n    spinnerStart()\n    const response = await ApiService.getMoviesById(id);\n    const { data } = response;\n\n    const galleryMarkup = createNewMarkup(data);\n    gallery.insertAdjacentHTML('beforeend', galleryMarkup);\n    paginationBlock.classList.remove('is-hidden')\n  }\n  catch(error) {\n      console.log(error);\n      paginationBlock.classList.add('is-hidden')\n      return Notify.failure('Something went wrong. Please try again later.');\n  }\n  finally {\n    spinnerStop();\n  }\n}\n\nfunction createNewMarkup(data) {\n    const {genres, poster_path, release_date, title, vote_average, id } = data;\n\n    const posterLink = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n    const releaseYear = release_date.slice(0, 4);\n    const genresList = genres.map(genre => genre.name);\n    const genresItems = genresList.length > 2 ? [genresList[0], genresList[1], 'Other'].join(', ') : genresList.join(', ');\n    const voteAverage = vote_average.toFixed(1);\n\n   return `\n   <li class=\"movies__item\" id=${id}>\n      <div class=\"movies__wrapper\">\n      <img \n       alt=${title} src=${posterLink} class=\"movies__poster\" loading=\"lazy\">\n      </div>\n      <div class=\"movies__meta\">\n        <h2 class=\"movies__title\">${title}</h2>\n        <div class=\"movies__desc\">\n          <span class=\"movies__desc-genres\">${genresItems}</span>|\n          <span class=\"movies__desc-release-year\">${releaseYear}</span>\n          <span class=\"movies__vote is-hidden\">${voteAverage}</span>\n        </div>\n      </div>\n    </li>`;\n   }\n\n\n"],"names":["$bpxeT","parcelRequire","$20cb5661f88ad321$var$gallery","document","querySelector","$20cb5661f88ad321$var$paginationBlock","$20cb5661f88ad321$var$currentPage","$5V9Cu","pagination","getCurrentPage","$20cb5661f88ad321$var$idList","$20cb5661f88ad321$var$totalItems","length","$20cb5661f88ad321$var$loadOnePage","pageNumber","i","$20cb5661f88ad321$var$findMovieById","id","$20cb5661f88ad321$var$_findMovieById","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","response","data","galleryMarkup","$j1lrD","spinnerStart","$2nBDz","ApiService","getMoviesById","_ctx","sent","$20cb5661f88ad321$var$createNewMarkup","insertAdjacentHTML","classList","remove","console","log","t0","add","$6JpON","Notify","failure","spinnerStop","genres","poster_path","release_date","title","vote_average","posterLink","concat","releaseYear","slice","genresList","map","genre","name","genresItems","join","voteAverage","toFixed","reset","idList1","$20cb5661f88ad321$var$loadMoviesList","on","event","innerHTML","currentPage1","page","error"],"version":3,"file":"my-library.d4ff5143.js.map"}