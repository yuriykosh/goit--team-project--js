{"mappings":"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","sources":["src/js/searchMovies.js","src/js/markUp.js","src/js/player.js"],"sourcesContent":["import { Notify } from 'notiflix';\nimport { ApiService } from './ApiServise';\nimport createMarkup from './markUp';\nimport { spinnerStart, spinnerStop } from './spinner';\nimport { pagination } from './tuiPagination';\nimport findMovieTrailer from './player';\nimport { onScroll, onToTopBtn } from \"./scroll-to-top\";\n\nconst gallery = document.querySelector('.movies');\nconst formEl = document.querySelector('.js-form');\nconst paginationBlock = document.querySelector('.tui-pagination')\nconst currentPage = pagination.getCurrentPage();\nconst toTopBtn = document.querySelector('.btn-to-top');\nconst playBtn = document.querySelector('.js-playBtn');\n\nformEl.addEventListener('submit', onFormSubmit);\nwindow.addEventListener('scroll', onScroll);\ntoTopBtn.addEventListener('click', onToTopBtn);\nplayBtn.addEventListener('click', onPlayTrailer);\n\nNotify.init({\n  width: '400px',\n  clickToClose: true,\n});\n\nfetchTrendMovies();\npagination.on('afterMove', loadMoreTrendingMovies);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  \n  const searchValue = e.currentTarget.elements.query.value.trim();\n\n  if (!searchValue) {\n    return Notify.failure('Please insert the name of the movie.');\n  }\n\n  paginationBlock.classList.add('is-hidden');\n  pagination.off('afterMove', loadMoreTrendingMovies);\n  pagination.off('afterMove', loadMoreSearchingPhotos);\n  pagination.on('afterMove', loadMoreSearchingPhotos);\n  ApiService.query = searchValue;\n\n  if (ApiService.query === '') {\n    return Notify.failure('Please insert the name of the movie.');\n  }\n\n  formEl.reset();\n  gallery.innerHTML = '';\n  fetchMovies();\n}\n\nasync function fetchMovies() {\n  try {\n    spinnerStart();\n    const response = await ApiService.getMoviesByName(currentPage);\n    const genresList = await ApiService.getGenresList();\n    const { data } = response;\n    const { page, results, total_pages, total_results } = data;\n\n    pagination.reset(total_results);\n\n    if (results.length === 0) {\n      spinnerStop();\n      return Notify.failure(\n        'Sorry, there are no movies matching your search query. Please try again.'\n      );\n    }\n\n    if (total_results !== 0) {\n      Notify.success(`Hooray! We found ${total_results} movies.`);\n    }\n\n    const markUp = createMarkup(results, genresList).join('');\n    gallery.innerHTML = markUp;\n    paginationBlock.classList.remove('is-hidden');\n  } catch (error) {\n    console.log(error);\n    return Notify.failure('Something went wrong. Please try again later.');\n  } finally {\n    spinnerStop();\n  }\n}\n\nasync function loadMoreSearchingPhotos(event) {\n  const currentPage = event.page;\n  try {\n    spinnerStart();\n    const response = await ApiService.getMoviesByName(currentPage);\n    const genresList = await ApiService.getGenresList();\n    const { data } = response;\n    const { page, results, total_pages, total_results } = data;\n    const markUp = createMarkup(results, genresList).join('');\n    gallery.innerHTML = markUp;\n  } catch (err) {\n    paginationBlock.classList.add('is-hidden');\n    console.log(error);\n    return Notify.failure('Something went wrong. Please try again later.');\n  } finally {\n    spinnerStop();\n  }\n}\n\nasync function fetchTrendMovies() {\n  try {\n    spinnerStart();\n    const response = await ApiService.getTrendMovies(currentPage);\n    const genresList = await ApiService.getGenresList();\n    const { data } = response;\n    const { page, results, total_pages, total_results } = data;\n\n    pagination.reset(total_results);     ///Почему отображается всего 50 страниц?\n    \n    if (results.length === 0) {\n      spinnerStop();\n      return Notify.failure(\n        'Trending movies are not available. Please insert the name of the movie.'\n      );\n    }\n\n    const markUp = createMarkup(results, genresList).join('');\n    gallery.innerHTML = markUp;\n    paginationBlock.classList.remove('is-hidden');\n  } catch (error) {\n    console.log(error);\n    return Notify.failure('Something went wrong. Please try again later.');\n  } finally {\n    spinnerStop();\n  }\n}\n\nasync function loadMoreTrendingMovies(event) {\n  const currentsPage = event.page;\n\n  try {\n    spinnerStart();\n    const response = await ApiService.getTrendMovies(currentsPage);\n    const genresList = await ApiService.getGenresList();\n    const { data } = response;\n    const { page, results, total_pages, total_results } = data;\n    const markUp = createMarkup(results, genresList).join('');\n    gallery.innerHTML = markUp;\n  } catch (err) {\n    paginationBlock.classList.add('is-hidden');\n    console.log(err);\n    return Notify.failure('Something went wrong. Please try again later.');\n  } finally {\n    spinnerStop();\n  }\n}\n\nfunction onPlayTrailer(event) {\n  const moviesId = event.target.closest('[data-modal]').id;\n  findMovieTrailer(moviesId);\n}","export default function createMarkup(results, { data }) {\n\n  const defaultImage = `https://raw.githubusercontent.com/yuriykosh/goit--team-project--js/main/src/images/main-home/poster-filler-desktop.jpeg`; ///////////\n\n    return results.map(result => {\n      const { genre_ids, poster_path, release_date, title, vote_average, id } = result;\n      const posterLink = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n      const releaseYear = release_date.slice(0, 4);\n      const genresList = data.genres.filter(genre => genre_ids.includes(genre.id))\n      .map(item => item.name);\n      const genres = genresList.length > 2 ? [genresList[0], genresList[1], 'Other'].join(', ') : genresList.join(', ');\n      const voteAverage = vote_average.toFixed(1);\n\n     return `\n     <li class=\"movies__item\" id=${id}>\n        <div class=\"movies__wrapper\">\n        <img onerror=\"this.onerror=null;this.src='${defaultImage}';\"\n         alt=${title} src=${posterLink} class=\"movies__poster\" loading=\"lazy\">\n        </div>\n        <div class=\"movies__meta\">\n          <h2 class=\"movies__title\">${title}</h2>\n          <div class=\"movies__desc\">\n            <span class=\"movies__desc-genres\">${genres}</span>|\n            <span class=\"movies__desc-release-year\">${releaseYear}</span>\n            <span class=\"movies__vote is-hidden\">${voteAverage}</span>\n          </div>\n        </div>\n      </li>`;\n     })\n }     \n","import { ApiService } from './ApiServise';\nimport { Notify } from 'notiflix';\n\nconst player = document.querySelector('.player');\nconst modal = document.querySelector('[data-modal]');\n\nmodal.addEventListener('click', onClose);\n\nexport default async function findMovieTrailer(id) {\n    try {\n      const response = await ApiService.getMovieTreiler(id);\n      const { data } = response;\n  \n      const videoKey = data.results.find(\n        result => result.type === 'Trailer' && result.official\n      ).key;\n      videoID = videoKey;\n  \n      createPlayer(videoID);\n      \n      window.addEventListener('keydown', onEscPress)\n  \n    } catch (error) {\n      console.log(error);\n      return Notify.failure('Something went wrong. Please try again later.');\n    }\n  }\n  \n  function createPlayer (id) {\n    const frame = `<iframe class=\"player__frame\" id=\"player\" type=\"text/html\"\n    src=\"http://www.youtube.com/embed/${id}?enablejsapi=1&origin=http://example.com\"frameborder=\"0\"></iframe>`;\n    player.innerHTML = frame;\n  }\n\n  function onEscPress(e) {\n    if (e.key !== 'Escape') {\n      return\n    }\n    player.innerHTML = '';\n    window.removeEventListener('keydown', onEscPress)\n  }\n\n  function onClose(e) {\n    if (e.target !== player) {\n      player.innerHTML = '';\n    }\n  }\n"],"names":["$7Y9D8","parcelRequire","$ecc0c8bcf37892e8$export$2e2bcd8739ae039","results","data","map","result","genre_ids","poster_path","release_date","title","vote_average","id","posterLink","releaseYear","slice","genresList","genres","filter","genre","includes","item","name","length","join","toFixed","$cnvsZ","$03ce2d03a8d35791$var$player","document","querySelector","async","$03ce2d03a8d35791$export$2e2bcd8739ae039","response","ApiService","getMovieTreiler","videoKey","find","type","official","key","videoID","frame","innerHTML","$03ce2d03a8d35791$var$createPlayer","window","addEventListener","$03ce2d03a8d35791$var$onEscPress","error","console","log","Notify","failure","e","removeEventListener","target","$4a9ea052b238628e$var$gallery","$4a9ea052b238628e$var$formEl","$4a9ea052b238628e$var$paginationBlock","$4a9ea052b238628e$var$currentPage","$jjYMT","pagination","getCurrentPage","$4a9ea052b238628e$var$toTopBtn","$4a9ea052b238628e$var$playBtn","$4a9ea052b238628e$var$loadMoreSearchingPhotos","event","currentPage1","page","$04jNI","spinnerStart","getMoviesByName","getGenresList","total_pages","total_results","markUp","err","classList","add","spinnerStop","$4a9ea052b238628e$var$loadMoreTrendingMovies","currentsPage","getTrendMovies","preventDefault","searchValue","currentTarget","elements","query","value","trim","off","on","reset","success","remove","$4a9ea052b238628e$var$fetchMovies","$dpZmf","onScroll","onToTopBtn","closest","init","width","clickToClose","$4a9ea052b238628e$var$fetchTrendMovies"],"version":3,"file":"index.c8cffb2c.js.map"}