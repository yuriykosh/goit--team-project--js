{"mappings":"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","sources":["src/js/searchMovies.js","src/js/markUp.js"],"sourcesContent":["import { Notify } from 'notiflix';\nimport { ApiService } from './ApiServise';\nimport createMarkup from './markUp';\nimport { spinnerStart, spinnerStop } from './spinner';\nimport { pagination } from './tuiPagination';\n\nconst gallery = document.querySelector('.movies');\nconst formEl = document.querySelector('.js-form');\nconst paginationBlock = document.querySelector('.tui-pagination')\nconst currentPage = pagination.getCurrentPage();\nconst player = document.querySelector('.player');\n\nformEl.addEventListener('submit', onFormSubmit);\n\nNotify.init({\n  width: '400px',\n  clickToClose: true,\n});\n\nfetchTrendMovies();\npagination.on('afterMove', loadMoreTrendingMovies);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  \n  const searchValue = e.currentTarget.elements.query.value.trim();\n\n  if (!searchValue) {\n    return Notify.failure('Please insert the name of the movie.');\n  }\n\n  paginationBlock.classList.add('is-hidden');\n  pagination.off('afterMove', loadMoreTrendingMovies);\n  pagination.off('afterMove', loadMoreSearchingPhotos);\n  pagination.on('afterMove', loadMoreSearchingPhotos);\n  ApiService.query = searchValue;\n\n  if (ApiService.query === '') {\n    return Notify.failure('Please insert the name of the movie.');\n  }\n\n  formEl.reset();\n  gallery.innerHTML = '';\n  fetchMovies();\n}\n\nasync function fetchMovies() {\n  try {\n    spinnerStart();\n    const response = await ApiService.getMoviesByName(currentPage);\n    const genresList = await ApiService.getGenresList();\n    const { data } = response;\n    const { page, results, total_pages, total_results } = data;\n\n    pagination.reset(total_results);\n\n    if (results.length === 0) {\n      spinnerStop();\n      return Notify.failure(\n        'Sorry, there are no movies matching your search query. Please try again.'\n      );\n    }\n\n    if (total_results !== 0) {\n      Notify.success(`Hooray! We found ${total_results} movies.`);\n    }\n\n    const markUp = createMarkup(results, genresList).join('');\n    gallery.innerHTML = markUp;\n    paginationBlock.classList.remove('is-hidden');\n  } catch (error) {\n    console.log(error);\n    return Notify.failure('Something went wrong. Please try again later.');\n  } finally {\n    spinnerStop();\n  }\n}\n\nasync function loadMoreSearchingPhotos(event) {\n  const currentPage = event.page;\n  try {\n    spinnerStart();\n    const response = await ApiService.getMoviesByName(currentPage);\n    const genresList = await ApiService.getGenresList();\n    const { data } = response;\n    const { page, results, total_pages, total_results } = data;\n    const markUp = createMarkup(results, genresList).join('');\n    gallery.innerHTML = markUp;\n  } catch (err) {\n    paginationBlock.classList.add('is-hidden');\n    console.log(error);\n    return Notify.failure('Something went wrong. Please try again later.');\n  } finally {\n    spinnerStop();\n  }\n}\n\nasync function fetchTrendMovies() {\n  try {\n    spinnerStart();\n    const response = await ApiService.getTrendMovies(currentPage);\n    const genresList = await ApiService.getGenresList();\n    const { data } = response;\n    const { page, results, total_pages, total_results } = data;\n\n    pagination.reset(total_results);     ///Почему отображается всего 50 страниц?\n    \n    if (results.length === 0) {\n      spinnerStop();\n      return Notify.failure(\n        'Trending movies are not available. Please insert the name of the movie.'\n      );\n    }\n\n    const markUp = createMarkup(results, genresList).join('');\n    gallery.innerHTML = markUp;\n    paginationBlock.classList.remove('is-hidden');\n  } catch (error) {\n    console.log(error);\n    return Notify.failure('Something went wrong. Please try again later.');\n  } finally {\n    spinnerStop();\n  }\n}\n\nasync function loadMoreTrendingMovies(event) {\n  const currentsPage = event.page;\n\n  try {\n    spinnerStart();\n    const response = await ApiService.getTrendMovies(currentsPage);\n    const genresList = await ApiService.getGenresList();\n    const { data } = response;\n    const { page, results, total_pages, total_results } = data;\n    const markUp = createMarkup(results, genresList).join('');\n    gallery.innerHTML = markUp;\n  } catch (err) {\n    paginationBlock.classList.add('is-hidden');\n    console.log(err);\n    return Notify.failure('Something went wrong. Please try again later.');\n  } finally {\n    spinnerStop();\n  }\n}\n\nasync function findMovieTrailer(id) {\n  try {\n    const response = await ApiService.getMovieTreiler(id);\n    const { data } = response;\n\n    console.log(data.results);\n\n    const videoKey = data.results.find(\n      result => result.type === 'Trailer' && result.official\n    ).key;\n    videoID = videoKey;\n    console.log(videoID);\n\n    random(videoID);\n\n  } catch (error) {\n    console.log(error);\n    return Notify.failure('Something went wrong. Please try again later.');\n  }\n}\n\nfindMovieTrailer(615777);\n\n\n\n\n\nfunction random (id) {\n\nconst frame = `<iframe id=\"player\" type=\"text/html\" width=\"640\" height=\"360\"\nsrc=\"http://www.youtube.com/embed/${id}?enablejsapi=1&origin=http://example.com\"frameborder=\"0\"></iframe>`;\nplayer.innerHTML = frame;\n}\nrandom()\n","export default function createMarkup(results, { data }) {\n\n  const defaultImage = `https://raw.githubusercontent.com/yuriykosh/goit--team-project--js/main/src/images/main-home/poster-filler-desktop.jpeg`; ///////////\n\n    return results.map(result => {\n      const { genre_ids, poster_path, release_date, title, vote_average, id } = result;\n      const posterLink = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n      const releaseYear = release_date.slice(0, 4);\n      const genresList = data.genres.filter(genre => genre_ids.includes(genre.id))\n      .map(item => item.name);\n      const genres = genresList.length > 2 ? [genresList[0], genresList[1], 'Other'].join(', ') : genresList.join(', ');\n      const voteAverage = vote_average.toFixed(1);\n\n     return `\n     <li class=\"movies__item\" id=${id}>\n        <div class=\"movies__wrapper\">\n        <img onerror=\"this.onerror=null;this.src='${defaultImage}';\"\n         alt=\"Titanic\" src=${posterLink} class=\"movies__poster\" loading=\"lazy\">\n        </div>\n        <div class=\"movies__meta\">\n          <h2 class=\"movies__title\">${title}</h2>\n          <div class=\"movies__desc\">\n            <span class=\"movies__desc-genres\">${genres}</span>|\n            <span class=\"movies__desc-release-year\">${releaseYear}</span>\n            <span class=\"movies__vote is-hidden\">${voteAverage}</span>\n          </div>\n        </div>\n      </li>`;\n     })\n }     \n"],"names":["$7Y9D8","parcelRequire","$ecc0c8bcf37892e8$export$2e2bcd8739ae039","results","data","map","result","genre_ids","poster_path","release_date","title","vote_average","id","posterLink","releaseYear","slice","genresList","genres","filter","genre","includes","item","name","length","join","toFixed","$4a9ea052b238628e$var$gallery","document","querySelector","$4a9ea052b238628e$var$formEl","$4a9ea052b238628e$var$paginationBlock","$4a9ea052b238628e$var$currentPage","$jjYMT","pagination","getCurrentPage","$4a9ea052b238628e$var$player","async","$4a9ea052b238628e$var$loadMoreSearchingPhotos","event","currentPage1","page","$04jNI","spinnerStart","response","$cnvsZ","ApiService","getMoviesByName","getGenresList","total_pages","total_results","markUp","innerHTML","err","classList","add","console","log","error","Notify","failure","spinnerStop","$4a9ea052b238628e$var$loadMoreTrendingMovies","currentsPage","getTrendMovies","$4a9ea052b238628e$var$random","frame","addEventListener","e","preventDefault","searchValue","currentTarget","elements","query","value","trim","off","on","reset","success","remove","$4a9ea052b238628e$var$fetchMovies","init","width","clickToClose","$4a9ea052b238628e$var$fetchTrendMovies","getMovieTreiler","videoKey","find","type","official","key","videoID","$4a9ea052b238628e$var$findMovieTrailer"],"version":3,"file":"index.3854a7fa.js.map"}