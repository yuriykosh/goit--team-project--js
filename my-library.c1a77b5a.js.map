{"mappings":"kpBAsBA,IAAAA,EACAC,E,iJArBA,IAAIC,EAAU,GAoBdF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,G,EAelCL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,C,KCnBTE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,sMCAzD,I,EAAAC,EAAAJ,EAAA,S,0BCAAK,EAAiB,IAAAC,IAAoBN,EAAA,SAAAO,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,W,wDDS5F,MAAMC,EAAO,CACTC,QAASC,SAASC,cAAc,mBAChCC,OAAQF,SAASC,cAAc,kBAC/BE,UAAWH,SAASC,cAAc,WAClCG,gBAAiBJ,SAASC,cAAc,eACxCI,SAAUL,SAASC,cAAc,gBAGrCH,EAAKC,QAAQO,UAAUC,IAAI,aAC3BT,EAAKM,gBAAgBE,UAAUC,IAAI,aAGnC,IAAIC,EAAc,UACdC,EAASC,EAAAC,QAAoBC,KAAKJ,GAElCK,EAAcJ,EAAaA,EAAO3B,OAAX,EAC3BgC,EAAAC,WAAWC,MAAMH,GACjB,MAAMI,EAAcH,EAAAC,WAAWG,iBAU/B,SAASC,EAAQC,GACftB,EAAKC,QAAQO,UAAUe,OAAO,aAC9Bb,EAAcY,EAAME,OAAOC,QAAQC,KA8ClC1B,EAAKK,UAAUsB,UAAY,GAC3BX,EAAAC,WAAWW,WAAW,GA7CvBC,EAAelB,E,CAGF,SAAAkB,EAAwBC,GAChCA,EAOLC,EAAYZ,GANRnB,EAAKK,UAAUsB,UAAY,mCAEbK,EAAAvC,8C,CAOpB,SAASsC,EAAYE,GACnB,IAAI,IAAIlD,EAAqB,IAAlBkD,EAAa,GAAUlD,EAAe,GAAbkD,EAAiBlD,GAAG,EAAG,CACzD,GAAIA,IAAMgC,EACR,OAEFmB,EAAcvB,EAAO5B,G,EAIzBoD,eAAeD,EAAcjD,GAC3B,KACE,EAAAmD,EAAAC,gBACA,MAAMC,QAAiBC,EAAAC,WAAWC,cAAcxD,IAC1CyD,KAAEA,GAASJ,EAEXK,GAAgB,EAAAC,EAAAC,qBAAoBH,GAC1C1C,EAAKK,UAAUyC,mBAAmB,YAAaH,GAC/C3C,EAAKM,gBAAgBE,UAAUe,OAAO,Y,CAExC,MAAMwB,GAGF,OAFAC,QAAQC,IAAIF,GACZ/C,EAAKM,gBAAgBE,UAAUC,IAAI,aAC5BjB,EAAA0D,OAAOC,QAAQ,gD,CACzB,SAEC,EAAAf,EAAAgB,c,EApDJvB,EAAelB,GAEfK,EAAAC,WAAWoC,GAAG,aA2Dd,SAAkB/B,GAChBtB,EAAKK,UAAUsB,UAAY,GAC3B,MAAM2B,EAAchC,EAAMiC,KAE1B,KACE,EAAAnB,EAAAC,gBACAN,EAAYuB,GACZtD,EAAKM,gBAAgBE,UAAUe,OAAO,Y,CACtC,MAAOwB,GAGP,OAFA/C,EAAKM,gBAAgBE,UAAUC,IAAI,aACnCuC,QAAQC,IAAIF,GACLvD,EAAA0D,OAAOC,QAAQ,gD,CACvB,SACC,EAAAf,EAAAgB,c,KAtEJI,OAAOC,iBAAiB,SAAUC,EAAAC,UAClC3D,EAAKC,QAAQwD,iBAAiB,QAASpC,GACvCrB,EAAKI,OAAOqD,iBAAiB,QAASpC,GACtCrB,EAAKO,SAASkD,iBAAiB,QAASC,EAAAE,Y","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-6161ec61505e5586.js","src/js/watchedQueuedList.js","node_modules/@parcel/runtime-js/lib/runtime-c578acf25ab98737.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"1zJhX\\\":\\\"my-library.c1a77b5a.js\\\",\\\"32lSb\\\":\\\"empty-list.42b24b97.gif\\\",\\\"5UbS1\\\":\\\"index.89eee40d.css\\\",\\\"b9auz\\\":\\\"index.447394b3.js\\\"}\"));","import { Notify } from 'notiflix';\nimport { ApiService } from './ApiServise';\nimport { spinnerStart, spinnerStop } from \"./spinner\";\nimport empty from '../images/empty-list.gif';\nimport { pagination } from './tuiPagination';\nimport { onScroll, onToTopBtn } from \"./scroll-to-top\";\nimport { createGalleryMarkup } from './markUp';\nimport localStorageService from './localStorage-service';\n\nconst refs = {\n    watched: document.querySelector('.button-watched'), \n    queued: document.querySelector('.button-queued'), \n    movieList: document.querySelector('.movies'), \n    paginationBlock: document.querySelector('#pagination'),\n    toTopBtn: document.querySelector('.btn-to-top'),\n}\n\nrefs.watched.classList.add('is-active');\nrefs.paginationBlock.classList.add('is-hidden');\n\n\nlet STORAGE_KEY = 'WATCHED';\nlet idList = localStorageService.load(STORAGE_KEY);\n\nlet totalItems = !idList ? 0 : idList.length;\npagination.reset(totalItems);\nconst currentPage = pagination.getCurrentPage();\nloadMoviesList(idList);\n\npagination.on('afterMove', loadMore);  \n\nwindow.addEventListener('scroll', onScroll);\nrefs.watched.addEventListener('click', onClick);\nrefs.queued.addEventListener('click', onClick);\nrefs.toTopBtn.addEventListener('click', onToTopBtn);\n\nfunction onClick(event) {\n  refs.watched.classList.remove('is-active');\n  STORAGE_KEY = event.target.dataset.name;\n  clearMovieList();   \n  loadMoviesList(idList);\n}\n\nexport default function loadMoviesList(list) {\n  if (!list) {\n      refs.movieList.innerHTML = `\n      <li>\n        <img src=\"${empty}\" alt=\"The list is empty.\" />\n      </li>`;\n    return;\n  }\n  loadOnePage(currentPage);\n}   \n\nfunction loadOnePage(pageNumber) {\n  for(let i=(pageNumber - 1) * 20 ; i<pageNumber * 20; i+=1) {\n    if (i === totalItems ) {\n      return;\n    }\n    findMovieById(idList[i]);\n  }\n}\n\nasync function findMovieById(id) {\n  try {\n    spinnerStart()\n    const response = await ApiService.getMoviesById(id);\n    const { data } = response;\n\n    const galleryMarkup = createGalleryMarkup(data);\n    refs.movieList.insertAdjacentHTML('beforeend', galleryMarkup);\n    refs.paginationBlock.classList.remove('is-hidden');\n  }\n  catch(error) {\n      console.log(error);\n      refs.paginationBlock.classList.add('is-hidden');\n      return Notify.failure('Something went wrong. Please try again later.');\n  }\n  finally {\n    spinnerStop();\n  }\n}\n\nfunction clearMovieList(){\n   refs.movieList.innerHTML = \"\"; \n   pagination.movePageTo(1);\n}\n\nfunction loadMore(event) {\n  refs.movieList.innerHTML = '';\n  const currentPage = event.page;\n\n  try {\n    spinnerStart();\n    loadOnePage(currentPage);\n    refs.paginationBlock.classList.remove('is-hidden')\n  } catch (error) {\n    refs.paginationBlock.classList.add('is-hidden');\n    console.log(error);\n    return Notify.failure('Something went wrong. Please try again later.');\n  } finally {\n    spinnerStop();\n  }\n}","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"32lSb\")).toString();"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$7Y9D8","$734b9ce990a5e2e3$exports","URL","resolve","import","meta","url","toString","$f9e64c9db0cf690d$var$refs","watched","document","querySelector","queued","movieList","paginationBlock","toTopBtn","classList","add","$f9e64c9db0cf690d$var$STORAGE_KEY","$f9e64c9db0cf690d$var$idList","$hvBA4","default","load","$f9e64c9db0cf690d$var$totalItems","$jjYMT","pagination","reset","$f9e64c9db0cf690d$var$currentPage","getCurrentPage","$f9e64c9db0cf690d$var$onClick","event","remove","target","dataset","name","innerHTML","movePageTo","$f9e64c9db0cf690d$export$2e2bcd8739ae039","list","$f9e64c9db0cf690d$var$loadOnePage","$parcel$interopDefault","pageNumber","$f9e64c9db0cf690d$var$findMovieById","async","$04jNI","spinnerStart","response","$cnvsZ","ApiService","getMoviesById","data","galleryMarkup","$kkejX","createGalleryMarkup","insertAdjacentHTML","error","console","log","Notify","failure","spinnerStop","on","currentPage1","page","window","addEventListener","$dpZmf","onScroll","onToTopBtn"],"version":3,"file":"my-library.c1a77b5a.js.map"}