{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-4dca91cfab1c7a90.js","src/js/searchMovies.js","node_modules/@parcel/runtime-js/lib/runtime-8f540fab76abb421.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"EVgbq\\\":\\\"index.34262731.js\\\",\\\"dz3oS\\\":\\\"empty-list.42b24b97.gif\\\",\\\"5UbS1\\\":\\\"index.6cfcdded.css\\\",\\\"2hvCh\\\":\\\"index.dcd3e6ff.js\\\"}\"));","import { Notify } from 'notiflix';\nimport { ApiService } from './ApiServise';\nimport { createMainMarkup } from './markUp';\nimport { spinnerStart, spinnerStop } from './spinner';\nimport { pagination } from './tuiPagination';\nimport { onScroll, onToTopBtn } from \"./scroll-to-top\";\nimport empty from '../images/empty-list.gif';\n\nconst gallery = document.querySelector('.movies');\nconst formEl = document.querySelector('.js-form');\nconst paginationBlock = document.querySelector('.tui-pagination')\nconst currentPage = pagination.getCurrentPage();\nconst toTopBtn = document.querySelector('.btn-to-top');\n\nformEl.addEventListener('submit', onFormSubmit);\nwindow.addEventListener('scroll', onScroll);\ntoTopBtn.addEventListener('click', onToTopBtn);\n\nNotify.init({\n  width: '400px',\n  clickToClose: true,\n});\n\nfetchTrendMovies();\npagination.on('afterMove', loadMoreTrendingMovies);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  \n  const searchValue = e.currentTarget.elements.query.value.trim();\n\n  if (!searchValue) {\n    return Notify.failure('Please insert the name of the movie.');\n  }\n\n  paginationBlock.classList.add('is-hidden');\n  pagination.off('afterMove', loadMoreTrendingMovies);\n  pagination.off('afterMove', loadMoreSearchingPhotos);\n  pagination.on('afterMove', loadMoreSearchingPhotos);\n  ApiService.query = searchValue;\n\n  if (ApiService.query === '') {\n    return Notify.failure('Please insert the name of the movie.');\n  }\n\n  formEl.reset();\n  gallery.innerHTML = '';\n  fetchMovies();\n}\n\nasync function fetchMovies() {\n  try {\n    spinnerStart();\n    const response = await ApiService.getMoviesByName(currentPage);\n    const genresList = await ApiService.getGenresList();\n    const { data } = response;\n    const { results, total_results } = data;\n\n    pagination.reset(total_results);\n\n    if (results.length === 0) {\n      spinnerStop();\n      gallery.innerHTML = `<li>\n      <p class=\"empty__notify\">where is everyone?</p>\n      <img src=\"${empty}\" alt=\"The list is empty.\"/>\n    </li>`;\n      return Notify.failure(\n        'Sorry, there are no movies matching your search query. Please try again.'\n      );\n    }\n\n    if (total_results !== 0) {\n      Notify.success(`Hooray! We found ${total_results} movies.`);\n    }\n\n    const markUp = createMainMarkup(results, genresList).join('');\n    gallery.innerHTML = markUp;\n    paginationBlock.classList.remove('is-hidden');\n  } catch (error) {\n    console.log(error);\n    gallery.innerHTML = `<li>\n      <p class=\"empty__notify\">where is everyone?</p>\n      <img src=\"${empty}\" alt=\"The list is empty.\"/>\n    </li>`;\n    return Notify.failure('Something went wrong. Please try again later.');\n  } finally {\n    spinnerStop();\n  }\n}\n\nasync function loadMoreSearchingPhotos(event) {\n  window.scrollTo({ top: 0, behavior: 'smooth' });\n  const currentPage = event.page;\n  try {\n    spinnerStart();\n    const response = await ApiService.getMoviesByName(currentPage);\n    const genresList = await ApiService.getGenresList();\n    const { data } = response;\n    const { results } = data;\n    const markUp = createMainMarkup(results, genresList).join('');\n    gallery.innerHTML = markUp;\n  } catch (error) {\n    paginationBlock.classList.add('is-hidden');\n    console.log(error);\n    gallery.innerHTML = `<li>\n      <p class=\"empty__notify\">where is everyone?</p>\n      <img src=\"${empty}\" alt=\"The list is empty.\"/>\n    </li>`;\n    return Notify.failure('Something went wrong. Please try again later.');\n  } finally {\n    spinnerStop();\n  }\n}\n\nasync function fetchTrendMovies() {\n  try {\n    spinnerStart();\n    const response = await ApiService.getTrendMovies(currentPage);\n    const genresList = await ApiService.getGenresList();\n    const { data } = response;\n    const { results, total_results } = data;\n\n    pagination.reset(total_results);    \n    \n    if (results.length === 0) {\n      spinnerStop();\n      gallery.innerHTML = `<li>\n      <p class=\"empty__notify\">where is everyone?</p>\n      <img src=\"${empty}\" alt=\"The list is empty.\"/>\n    </li>`;\n      return Notify.failure(\n        'Trending movies are not available. Please insert the name of the movie.'\n      );\n    }\n\n    const markUp = createMainMarkup(results, genresList).join('');\n    gallery.innerHTML = markUp;\n    paginationBlock.classList.remove('is-hidden');\n  } catch (error) {\n    console.log(error);\n    gallery.innerHTML = `<li>\n      <p class=\"empty__notify\">where is everyone?</p>\n      <img src=\"${empty}\" alt=\"The list is empty.\"/>\n    </li>`;\n    return Notify.failure('Something went wrong. Please try again later.');\n  } finally {\n    spinnerStop();\n  }\n}\n\nasync function loadMoreTrendingMovies(event) {\n  window.scrollTo({ top: 0, behavior: 'smooth' });\n  const currentsPage = event.page;\n\n  try {\n    spinnerStart();\n    const response = await ApiService.getTrendMovies(currentsPage);\n    const genresList = await ApiService.getGenresList();\n    const { data } = response;\n    const { results } = data;\n    const markUp = createMainMarkup(results, genresList).join('');\n    gallery.innerHTML = markUp;\n  } catch (error) {\n    paginationBlock.classList.add('is-hidden');\n    gallery.innerHTML = `<li>\n      <p class=\"empty__notify\">where is everyone?</p>\n      <img src=\"${empty}\" alt=\"The list is empty.\" />\n    </li>`;\n    console.log(error);\n    return Notify.failure('Something went wrong. Please try again later.');\n  } finally {\n    spinnerStop();\n  }\n}","module.exports = require('./helpers/bundle-url').getBundleURL('EVgbq') + require('./helpers/bundle-manifest').resolve(\"dz3oS\");"],"names":["parcelRequire","register","JSON","parse","$bpxeT","$2e71e38bbaa1d0b8$exports","getBundleURL","resolve","$e1a441075edf8b92$var$gallery","document","querySelector","$e1a441075edf8b92$var$formEl","$e1a441075edf8b92$var$paginationBlock","$e1a441075edf8b92$var$currentPage","$5V9Cu","pagination","getCurrentPage","$e1a441075edf8b92$var$toTopBtn","$e1a441075edf8b92$var$_fetchMovies","$parcel$interopDefault","$2TvXO","mark","_callee","response","genresList","data","results","total_results","markUp","$j1lrD","spinnerStart","$2nBDz","ApiService","getMoviesByName","_ctx","sent","getGenresList","reset","length","spinnerStop","innerHTML","concat","$6JpON","Notify","failure","success","$8f3h1","createMainMarkup","join","classList","remove","console","log","t0","apply","this","arguments","$e1a441075edf8b92$var$loadMoreSearchingPhotos","event","$e1a441075edf8b92$var$_loadMoreSearchingPhotos","currentPage1","window","scrollTo","top","behavior","page","add","$e1a441075edf8b92$var$_fetchTrendMovies","getTrendMovies","$e1a441075edf8b92$var$loadMoreTrendingMovies","$e1a441075edf8b92$var$_loadMoreTrendingMovies","currentsPage","addEventListener","e","preventDefault","searchValue","currentTarget","elements","query","value","trim","off","on","$e1a441075edf8b92$var$fetchMovies","$8vL8o","onScroll","onToTopBtn","init","width","clickToClose","$e1a441075edf8b92$var$fetchTrendMovies"],"version":3,"file":"index.34262731.js.map"}