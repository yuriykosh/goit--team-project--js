{"mappings":"8pBAsBA,IAAAA,EACAC,E,iJArBA,IAAIC,EAAU,GAoBdF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,G,EAelCL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,C,uCC2BT,IAAAE,E,6EA5CA,IAAIC,EAAY,GA6BhB,SAASC,EAAWC,GAClB,OAAQ,GAAKA,GAAKC,QAAO,+DAAiE,MAAQ,G,CAcpGJ,EA1CA,SAA4BH,GAC1B,IAAIQ,EAAQJ,EAAUJ,GAOtB,OALKQ,IACHA,EAOJ,WACE,IACE,MAAM,IAAIN,K,CACV,MAAOO,GACP,IAAIC,GAAW,GAAKD,EAAIE,OAAOC,MAAK,yDAEpC,GAAIF,EAGF,OAAOL,EAAWK,EAAQ,G,CAI9B,MAAO,G,CApBGG,GACRT,EAAUJ,GAAMQ,GAGXA,C,KCZTM,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,sMCAzDH,EAAA,S,MCAAI,EAAiBJ,EAAA,SAAAK,aAA6C,SAAWL,EAAA,SAAAM,QAA6C,S,wDDQtHC,OAAOC,iBAAiB,SAAUC,EAAAC,UAClCC,EAAAC,QAAKC,QAAQL,iBAAiB,QAASM,GACvCH,EAAAC,QAAKG,OAAOP,iBAAiB,QAASM,GACtCH,EAAAC,QAAKI,SAASR,iBAAiB,QAASC,EAAAQ,YAExC,IAkBmBC,EAlBfC,EAAc,GAIlB,SAASL,EAAQM,GACfD,EAAcC,EAAMC,OAAOC,QAAQC,KAEnC,IAAIC,EAAYC,EAAAb,QAAoBc,KAAKP,GACrB,YAAhBA,GACFR,EAAAC,QAAKC,QAAQc,UAAUC,IAAI,aAC3BjB,EAAAC,QAAKG,OAAOY,UAAUE,OAAO,eAE7BlB,EAAAC,QAAKG,OAAOY,UAAUC,IAAI,aAC1BjB,EAAAC,QAAKC,QAAQc,UAAUE,OAAO,cAEhCC,EAAeN,E,CAUjB,SAASM,EAAeC,GACtB,GAAoB,IAAhBA,EAAK9C,OAAT,CAQF,IAAM+C,GAAe,EAAAC,EAAAC,qBAAoBH,GACzCpB,EAAAC,QAAKY,UAAUW,UAAYH,EAAaI,KAAK,G,MARvCzB,EAAAC,QAAKY,UAAUW,UAAY,4FAGPE,OAANC,EAAAlC,GAAM,6C,CAZPc,EAhBT,UAiBRP,EAAAC,QAAKC,QAAQc,UAAUC,IAAI,aAC3BT,EAAcD,EAEdY,EADgBL,EAAAb,QAAoBc,KAAKP,I","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-444420c0c796feaa.js","src/js/watchedQueuedList.js","node_modules/@parcel/runtime-js/lib/runtime-fb494cbc0e456938.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"2Y0K8\\\":\\\"my-library.fde526ec.js\\\",\\\"dz3oS\\\":\\\"empty-list.42b24b97.gif\\\",\\\"5UbS1\\\":\\\"index.70fc6d1e.css\\\",\\\"2hvCh\\\":\\\"index.6fe8e813.js\\\"}\"));","import { Notify } from 'notiflix';\nimport empty from '../images/empty-list.gif';\n// import { pagination } from './tuiPagination';\nimport { onScroll, onToTopBtn } from \"./scroll-to-top\";\nimport { createGalleryMarkup } from './markUp';\nimport localStorageService from './localStorage-service';\nimport refs from './refs';\n\nwindow.addEventListener('scroll', onScroll);\nrefs.watched.addEventListener('click', onClick);\nrefs.queued.addEventListener('click', onClick);\nrefs.toTopBtn.addEventListener('click', onToTopBtn);\n\nlet STORAGE_KEY = '';\n\nstartPage('WATCHED');\n\nfunction onClick(event) {\n  STORAGE_KEY = event.target.dataset.name;\n\n  let movieList = localStorageService.load(STORAGE_KEY); \n  if (STORAGE_KEY === 'WATCHED') {\n    refs.watched.classList.add('is-active');\n    refs.queued.classList.remove('is-active');\n  } else{\n    refs.queued.classList.add('is-active');\n    refs.watched.classList.remove('is-active');\n  }\n  loadMoviesList(movieList);\n}\n\nfunction startPage(buttonKey) {\n  refs.watched.classList.add('is-active');\n  STORAGE_KEY = buttonKey;\n  let movieList = localStorageService.load(STORAGE_KEY); \n  loadMoviesList(movieList);\n}\n\nfunction loadMoviesList(list) {\n  if (list.length === 0) {\n      refs.movieList.innerHTML = `\n      <li>\n        <p class=\"empty__notify\">where is everyone?</p>\n        <img src=\"${empty}\" alt=\"The list is empty.\" />\n      </li>`;\n    return;\n  }\nconst galeryMarkUp = createGalleryMarkup(list);\nrefs.movieList.innerHTML = galeryMarkUp.join('');\n  // loadOnePage(currentPage);\n}   \n\n\n// refs.paginationBlock.classList.add('is-hidden');\n\n// let idList = localStorageService.load(STORAGE_KEY);\n\n// let totalItems = !idList ? 0 : idList.length;\n// pagination.reset(totalItems);\n// const currentPage = pagination.getCurrentPage();\n// loadMoviesList(idList);\n\n// pagination.on('afterMove', loadMore);  \n\n\n\n\n\n\n\n// function loadOnePage(pageNumber) {\n//   for(let i=(pageNumber - 1) * 20 ; i<pageNumber * 20; i+=1) {\n//     if (i === totalItems ) {\n//       return;\n//     }\n//     findMovieById(idList[i]);\n//   }\n// }\n\n// async function findMovieById(id) {\n//   try {\n//     spinnerStart()\n//     const response = await ApiService.getMoviesById(id);\n//     const { data } = response;\n\n//     const galleryMarkup = createGalleryMarkup(data);\n//     refs.movieList.insertAdjacentHTML('beforeend', galleryMarkup);\n//     refs.paginationBlock.classList.remove('is-hidden');\n//   }\n//   catch(error) {\n//       console.log(error);\n//       refs.paginationBlock.classList.add('is-hidden');\n//       return Notify.failure('Something went wrong. Please try again later.');\n//   }\n//   finally {\n//     spinnerStop();\n//   }\n// }\n\n// function clearMovieList(){\n//    refs.movieList.innerHTML = \"\"; \n//    pagination.movePageTo(1);\n// }\n\n// function loadMore(event) {\n//   refs.movieList.innerHTML = '';\n//   const currentPage = event.page;\n\n//   try {\n//     spinnerStart();\n//     loadOnePage(currentPage);\n//     refs.paginationBlock.classList.remove('is-hidden')\n//   } catch (error) {\n//     refs.paginationBlock.classList.add('is-hidden');\n//     console.log(error);\n//     return Notify.failure('Something went wrong. Please try again later.');\n//   } finally {\n//     spinnerStop();\n//   }\n// }\n\n\n\n// import { Notify } from 'notiflix';\n// import { ApiService } from './ApiServise';\n// const STORAGE_KEY = 'movie';\n// localStorage.setItem(STORAGE_KEY, 520);\n\n// const refs = {\n//     watched: document.querySelector('.button-watched'), \n//     queued: document.querySelector('.button-queued'), \n//     movieList: document.querySelector('.movies'), \n// }\n\n// const userId = 5;\n\n// refs.watched.addEventListener('click', onWatchedClick);\n\n// function onWatchedClick(event) {\n//    if (userId === 5) {\n// clearMovieList();   \n// const markUp = `<li class=\"movies__item\">\n//         <div class=\"movies__wrapper\">\n//           <img loading=\"lazy\" class=\"movies__poster\" src=\"/mobile-poster-filler.68d38ad9.jpeg\" alt=\"movies__poster\">\n//         </div>\n//         <div class=\"movies__meta\">\n//           <h2 class=\"movies__title\">Monster Hunter</h2>\n//           <div class=\"movies__desc\">\n//             <span class=\"movies__desc-genres\">Drama, Action</span>|\n//             <span class=\"movies__desc-release-year\">2020</span>\n//             <span class=\"movies__vote\">8.3</span>\n//           </div>\n//         </div>\n//       </li>`;\n// refs.movieList.insertAdjacentHTML('beforeend', markUp);\n// } \n// }\n\n// export default function createMovieMarkup(results) {\n//     return results.map(result => {\n//       const { genre_ids, poster_path, release_date, title, vote_average } = result;\n//       const posterLink = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n//       const releaseYear = release_date.slice(0, 4);\n//       const genresList = data.genres.filter(genre => genre_ids.includes(genre.id))\n//       .map(item => item.name);\n//       const genres = genresList.length > 2 ? [genresList[0], genresList[1], 'Other'].join(', ') : genresList.join(', ');\n//       const defaultImage = \"/src/images/mobile-poster-filler.jpeg\";\n//       const voteAverage = vote_average.toFixed(1);\n\n//      return `\n//      <li class=\"movies__item\">\n//         <div class=\"movies__wrapper\">\n//           <img\n//             loading=\"lazy\"\n//             class=\"movies__poster\"\n//             src=${posterLink}\n//             onerror=${defaultImage}\n//             alt=${title}\n//           />\n//         </div>\n//         <div class=\"movies__meta\">\n//           <h2 class=\"movies__title\">${title}</h2>\n//           <div class=\"movies__desc\">\n//             <span class=\"movies__desc-genres\">${genres}</span>|\n//             <span class=\"movies__desc-release-year\">${releaseYear}</span>\n//             <span class=\"movies__vote is-hidden\">${voteAverage}</span>\n//           </div>\n//         </div>\n//       </li>`;\n//      })\n//  }     \n\n// async function watchedMovie(id) {\n//     console.log('hello')\n//     try { \n//         const response = await ApiService.getMoviesById(id);\n//         const { data } = response;\n\n//         console.log(data);\n//         createMarkup(data); \n\n//     }\n//     catch(error) {\n\n//         console.log(error);\n//         return Notify.failure('Something went wrong. Please try again later.');\n//     }\n// }\n\n//  watchedMovie(505642)\n\n// function clearMovieList(){\n//    refs.movieList.innerHTML = \"\"; \n// }","module.exports = require('./helpers/bundle-url').getBundleURL('2Y0K8') + require('./helpers/bundle-manifest').resolve(\"dz3oS\");"],"names":["$0380ce8f1f064ccc$export$6503ec6e8aabbaf","$0380ce8f1f064ccc$export$f7ad0328861e2f03","$0380ce8f1f064ccc$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$7dd1ddf6834435ca$export$bdfd709ae4826697","$7dd1ddf6834435ca$var$bundleURL","$7dd1ddf6834435ca$var$getBaseURL","url","replace","value","err","matches","stack","match","$7dd1ddf6834435ca$var$getBundleURL","parcelRequire","register","JSON","parse","$6505e256021cfda0$exports","getBundleURL","resolve","window","addEventListener","$8vL8o","onScroll","$4Nugj","default","watched","$3e16c4773508b628$var$onClick","queued","toTopBtn","onToTopBtn","buttonKey","$3e16c4773508b628$var$STORAGE_KEY","event","target","dataset","name","movieList","$aDChi","load","classList","add","remove","$3e16c4773508b628$var$loadMoviesList","list","galeryMarkUp","$8f3h1","createGalleryMarkup","innerHTML","join","concat","$parcel$interopDefault"],"version":3,"file":"my-library.fde526ec.js.map"}