{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-aa6b0082fddce4b5.js","src/js/searchMovies.js","node_modules/@parcel/runtime-js/lib/runtime-c578acf25ab98737.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5ZPII\\\":\\\"index.b578121b.js\\\",\\\"32lSb\\\":\\\"empty-list.42b24b97.gif\\\",\\\"5UbS1\\\":\\\"index.a0df58eb.css\\\",\\\"b9auz\\\":\\\"index.609613aa.js\\\"}\"));","import { Notify } from 'notiflix';\nimport { ApiService } from './ApiServise';\nimport { createMainMarkup } from './markUp';\nimport { spinnerStart, spinnerStop } from './spinner';\nimport { pagination } from './tuiPagination';\nimport { onScroll, onToTopBtn } from \"./scroll-to-top\";\nimport empty from '../images/empty-list.gif';\n\nconst gallery = document.querySelector('.movies');\nconst formEl = document.querySelector('.js-form');\nconst paginationBlock = document.querySelector('.tui-pagination')\nconst currentPage = pagination.getCurrentPage();\nconst toTopBtn = document.querySelector('.btn-to-top');\n\nformEl.addEventListener('submit', onFormSubmit);\nwindow.addEventListener('scroll', onScroll);\ntoTopBtn.addEventListener('click', onToTopBtn);\n\nNotify.init({\n  width: '400px',\n  clickToClose: true,\n});\n\nfetchTrendMovies();\npagination.on('afterMove', loadMoreTrendingMovies);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  \n  const searchValue = e.currentTarget.elements.query.value.trim();\n\n  if (!searchValue) {\n    return Notify.failure('Please insert the name of the movie.');\n  }\n\n  paginationBlock.classList.add('is-hidden');\n  pagination.off('afterMove', loadMoreTrendingMovies);\n  pagination.off('afterMove', loadMoreSearchingPhotos);\n  pagination.on('afterMove', loadMoreSearchingPhotos);\n  ApiService.query = searchValue;\n\n  if (ApiService.query === '') {\n    return Notify.failure('Please insert the name of the movie.');\n  }\n\n  formEl.reset();\n  gallery.innerHTML = '';\n  fetchMovies();\n}\n\nasync function fetchMovies() {\n  try {\n    spinnerStart();\n    const response = await ApiService.getMoviesByName(currentPage);\n    const genresList = await ApiService.getGenresList();\n    const { data } = response;\n    const { page, results, total_pages, total_results } = data;\n\n    pagination.reset(total_results);\n\n    if (results.length === 0) {\n      spinnerStop();\n      gallery.innerHTML = `<li>\n      <p class=\"empty__notify\">where is everyone?</p>\n      <img src=\"${empty}\" alt=\"The list is empty.\"/>\n    </li>`;\n      return Notify.failure(\n        'Sorry, there are no movies matching your search query. Please try again.'\n      );\n    }\n\n    if (total_results !== 0) {\n      Notify.success(`Hooray! We found ${total_results} movies.`);\n    }\n\n    const markUp = createMainMarkup(results, genresList).join('');\n    gallery.innerHTML = markUp;\n    paginationBlock.classList.remove('is-hidden');\n  } catch (error) {\n    console.log(error);\n    gallery.innerHTML = `<li>\n      <p class=\"empty__notify\">where is everyone?</p>\n      <img src=\"${empty}\" alt=\"The list is empty.\"/>\n    </li>`;\n    return Notify.failure('Something went wrong. Please try again later.');\n  } finally {\n    spinnerStop();\n  }\n}\n\nasync function loadMoreSearchingPhotos(event) {\n  const currentPage = event.page;\n  try {\n    spinnerStart();\n    const response = await ApiService.getMoviesByName(currentPage);\n    const genresList = await ApiService.getGenresList();\n    const { data } = response;\n    const { page, results, total_pages, total_results } = data;\n    const markUp = createMainMarkup(results, genresList).join('');\n    gallery.innerHTML = markUp;\n  } catch (err) {\n    paginationBlock.classList.add('is-hidden');\n    console.log(error);\n    gallery.innerHTML = `<li>\n      <p class=\"empty__notify\">where is everyone?</p>\n      <img src=\"${empty}\" alt=\"The list is empty.\"/>\n    </li>`;\n    return Notify.failure('Something went wrong. Please try again later.');\n  } finally {\n    spinnerStop();\n  }\n}\n\nasync function fetchTrendMovies() {\n  try {\n    spinnerStart();\n    const response = await ApiService.getTrendMovies(currentPage);\n    const genresList = await ApiService.getGenresList();\n    const { data } = response;\n    const { page, results, total_pages, total_results } = data;\n\n    pagination.reset(total_results);    \n    \n    if (results.length === 0) {\n      spinnerStop();\n      gallery.innerHTML = `<li>\n      <p class=\"empty__notify\">where is everyone?</p>\n      <img src=\"${empty}\" alt=\"The list is empty.\"/>\n    </li>`;\n      return Notify.failure(\n        'Trending movies are not available. Please insert the name of the movie.'\n      );\n    }\n\n    const markUp = createMainMarkup(results, genresList).join('');\n    gallery.innerHTML = markUp;\n    paginationBlock.classList.remove('is-hidden');\n  } catch (error) {\n    console.log(error);\n    gallery.innerHTML = `<li>\n      <p class=\"empty__notify\">where is everyone?</p>\n      <img src=\"${empty}\" alt=\"The list is empty.\"/>\n    </li>`;\n    return Notify.failure('Something went wrong. Please try again later.');\n  } finally {\n    spinnerStop();\n  }\n}\n\nasync function loadMoreTrendingMovies(event) {\n  const currentsPage = event.page;\n\n  try {\n    spinnerStart();\n    const response = await ApiService.getTrendMovies(currentsPage);\n    const genresList = await ApiService.getGenresList();\n    const { data } = response;\n    const { page, results, total_pages, total_results } = data;\n    const markUp = createMainMarkup(results, genresList).join('');\n    gallery.innerHTML = markUp;\n  } catch (err) {\n    paginationBlock.classList.add('is-hidden');\n    gallery.innerHTML = `<li>\n      <p class=\"empty__notify\">where is everyone?</p>\n      <img src=\"${empty}\" alt=\"The list is empty.\" />\n    </li>`;\n    console.log(err);\n    return Notify.failure('Something went wrong. Please try again later.');\n  } finally {\n    spinnerStop();\n  }\n}","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"32lSb\")).toString();"],"names":["parcelRequire","register","JSON","parse","$7Y9D8","$734b9ce990a5e2e3$exports","URL","resolve","import","meta","url","toString","$4a9ea052b238628e$var$gallery","document","querySelector","$4a9ea052b238628e$var$formEl","$4a9ea052b238628e$var$paginationBlock","$4a9ea052b238628e$var$currentPage","$jjYMT","pagination","getCurrentPage","$4a9ea052b238628e$var$toTopBtn","async","$4a9ea052b238628e$var$loadMoreSearchingPhotos","event","currentPage1","page","$04jNI","spinnerStart","response","$cnvsZ","ApiService","getMoviesByName","genresList","getGenresList","data","results","total_pages","total_results","markUp","$kkejX","createMainMarkup","join","innerHTML","err","classList","add","console","log","error","$parcel$interopDefault","Notify","failure","spinnerStop","$4a9ea052b238628e$var$loadMoreTrendingMovies","currentsPage","getTrendMovies","addEventListener","e","preventDefault","searchValue","currentTarget","elements","query","value","trim","off","on","reset","length","success","remove","$4a9ea052b238628e$var$fetchMovies","window","$dpZmf","onScroll","onToTopBtn","init","width","clickToClose","$4a9ea052b238628e$var$fetchTrendMovies"],"version":3,"file":"index.b578121b.js.map"}