{"mappings":"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","sources":["src/js/searchMovies.js","src/js/markUp.js"],"sourcesContent":["import { Notify } from 'notiflix';\nimport { ApiService } from './ApiServise';\nimport createMarkup from './markUp';\nimport { spinnerStart, spinnerStop } from './spinner';\n\nconst gallery = document.querySelector('.movies');\nconst formEl = document.querySelector('.js-form');\n\nformEl.addEventListener('submit', onFormSubmit);\nformEl.addEventListener('input', onFormInput);\n\nNotify.init({\n  width: '400px',\n  clickToClose: true,\n});\n\nfetchTrendMovies();\nspinnerStart();\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  formEl.reset();\n\n  if (ApiService.query === '') {\n    return Notify.failure('Please insert the name of the movie.');\n  }\n\n  gallery.innerHTML = '';\n  ApiService.resetPage();\n  spinnerStart();\n  fetchMovies();\n}\n\nfunction onFormInput(e) {\n  ApiService.query = e.target.value.trim();\n}\n\nasync function fetchMovies() {\n  try {\n    const response = await ApiService.getMoviesByName();\n    const genresList = await ApiService.getGenresList();\n    const { data } = response;\n    const { page, results, total_pages, total_results } = data;\n\n    if (results.length === 0) {\n      spinnerStop();\n      return Notify.failure(\n        'Sorry, there are no movies matching your search query. Please try again.'\n      );\n    }\n\n    if (total_results !== 0) {\n      Notify.success(`Hooray! We found ${total_results} movies.`);\n    }\n\n    const markUp = createMarkup(results, genresList).join('');\n    gallery.innerHTML = markUp;\n    spinnerStop();\n  } catch (error) {\n    console.log(error);\n    return Notify.failure('Something went wrong. Please try again later.');\n  }\n}\n\nasync function fetchTrendMovies() {\n  try {\n    const response = await ApiService.getTrendMovies();\n    const genresList = await ApiService.getGenresList();\n    const { data } = response;\n    const { page, results, total_pages, total_results } = data;\n\n    if (results.length === 0) {\n      spinnerStop();\n      return Notify.failure(\n        'Trending movies are not available. Please insert the name of the movie.'\n      );\n    }\n\n    const markUp = createMarkup(results, genresList).join('');\n    gallery.innerHTML = markUp;\n    spinnerStop();\n  } catch (error) {\n    spinnerStop();\n    console.log(error);\n    return Notify.failure('Something went wrong. Please try again later.');\n  }\n}\n\nasync function findMovieTrailer(id) {\n  try {\n    const response = await ApiService.getMovieTreiler(id);\n    const { data } = response;\n\n    console.log(data.results);\n\n    const videoKey = data.results.find(\n      result => result.type === 'Trailer' && result.official\n    ).key;\n    console.log(videoKey);\n\n    const iFrame = `<iframe id=\"player\" type=\"text/html\" width=\"640\" height=\"360\"\n        src=\"http://www.youtube.com/embed/${videoKey}?enablejsapi=1&origin=http://example.com\"\n        frameborder=\"0\"></iframe>`;\n\n    videoPlayer.innerHTML = iFrame;\n\n    // if (results.length === 0) {\n    //     spinnerStop()\n    //     return Notify.failure('Trending movies are not available. Please insert the name of the movie.');\n    // }\n\n    // const markUp = createMarkup(results, genresList).join('');\n    // gallery.innerHTML =  markUp;\n    // spinnerStop()\n  } catch (error) {\n    spinnerStop();\n    console.log(error);\n    return Notify.failure('Something went wrong. Please try again later.');\n  }\n}\n\n// findMovieTrailer(615777)\n\n// const videoPlayer = document.getElementById('ppp');\n// // console.log(videoPlayer);\n\n// const iFrame = `<iframe id=\"player\" type=\"text/html\" width=\"640\" height=\"360\"\n//   src=\"http://www.youtube.com/embed/QXhCu0o79kY?enablejsapi=1&origin=http://example.com\"\n//   frameborder=\"0\"></iframe>`\n\n//   videoPlayer.innerHTML = iFrame;\n","export default function createMarkup(results, { data }) {\n\n  const defaultImage = `./src/images/mobile-poster-filler.jpeg`; ///////////\n\n    return results.map(result => {\n      const { genre_ids, poster_path, release_date, title, vote_average, id } = result;\n      const posterLink = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n      const releaseYear = release_date.slice(0, 4);\n      const genresList = data.genres.filter(genre => genre_ids.includes(genre.id))\n      .map(item => item.name);\n      const genres = genresList.length > 2 ? [genresList[0], genresList[1], 'Other'].join(', ') : genresList.join(', ');\n      const voteAverage = vote_average.toFixed(1);\n\n     return `\n     <li class=\"movies__item\" id=${id}>\n        <div class=\"movies__wrapper\">\n        <img onerror=\"this.onerror=null;this.src=${defaultImage};\"\n         alt=\"Titanic\" src=${posterLink} class=\"movies__poster\" loading=\"lazy\">\n        </div>\n        <div class=\"movies__meta\">\n          <h2 class=\"movies__title\">${title}</h2>\n          <div class=\"movies__desc\">\n            <span class=\"movies__desc-genres\">${genres}</span>|\n            <span class=\"movies__desc-release-year\">${releaseYear}</span>\n            <span class=\"movies__vote is-hidden\">${voteAverage}</span>\n          </div>\n        </div>\n      </li>`;\n     })\n }     \n"],"names":["$bpxeT","parcelRequire","$600243812f3c8d9b$export$2e2bcd8739ae039","results","param","data","map","result","genre_ids","poster_path","release_date","title","vote_average","id","posterLink","concat","releaseYear","slice","genresList","genres","filter","genre","includes","item","name","length","join","voteAverage","toFixed","$e1a441075edf8b92$var$gallery","document","querySelector","$e1a441075edf8b92$var$formEl","$e1a441075edf8b92$var$_fetchMovies","$parcel$interopDefault","$2TvXO","mark","_callee","response","total_results","markUp","$2nBDz","ApiService","getMoviesByName","_ctx","sent","getGenresList","page","total_pages","$j1lrD","spinnerStop","$6JpON","Notify","failure","success","innerHTML","console","log","t0","apply","this","arguments","$e1a441075edf8b92$var$_fetchTrendMovies","getTrendMovies","addEventListener","e","preventDefault","reset","query","resetPage","spinnerStart","$e1a441075edf8b92$var$fetchMovies","target","value","trim","init","width","clickToClose","$e1a441075edf8b92$var$fetchTrendMovies"],"version":3,"file":"index.4c2fafd1.js.map"}