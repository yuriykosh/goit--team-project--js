{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,aCAe,SAAAC,EAAsBC,GAASC,KAAEA,IAI5C,OAAOD,EAAQE,KAAIC,IACjB,MAAMC,UAAEA,EAASC,YAAEA,EAAWC,aAAEA,EAAYC,MAAEA,EAAKC,aAAEA,EAAYC,GAAEA,GAAON,EACpEO,EAAa,mCAAmCL,IAChDM,EAAcL,EAAaM,MAAM,EAAG,GACpCC,EAAaZ,EAAKa,OAAOC,QAAOC,GAASZ,EAAUa,SAASD,EAAMP,MACvEP,KAAIgB,GAAQA,EAAKC,OAInB,MAAO,sCACuBV,oKAGNC,qIAGSH,+FAVjBM,EAAWO,OAAS,EAAI,CAACP,EAAW,GAAIA,EAAW,GAAI,SAASQ,KAAK,MAAQR,EAAWQ,KAAK,sEAa5DV,8DAZ5BH,EAAac,QAAQ,0DAgBnC,G,kBDtBZ,MAAMC,EAAUC,SAASC,cAAc,WACjCC,EAASF,SAASC,cAAc,YAEtCC,EAAOC,iBAAiB,UAWxB,SAAsBC,GAIpB,GAHAA,EAAEC,iBACFH,EAAOI,QAEkB,KAArBC,EAAAC,WAAWC,MACb,OAAOpC,EAAAqC,OAAOC,QAAQ,wCAGxBZ,EAAQa,UAAY,GACpBL,EAAAC,WAAWK,aACX,EAAAC,EAAAC,gBAQFC,iBACE,IACE,MAAMC,QAAiBV,EAAAC,WAAWU,kBAC5B7B,QAAmBkB,EAAAC,WAAWW,iBAC9B1C,KAAEA,GAASwC,GACXG,KAAEA,EAAI5C,QAAEA,EAAO6C,YAAEA,EAAWC,cAAEA,GAAkB7C,EAEtD,GAAuB,IAAnBD,EAAQoB,OAEV,OADA,EAAAkB,EAAAS,eACOlD,EAAAqC,OAAOC,QACZ,4EAIkB,IAAlBW,GACFjD,EAAAqC,OAAOc,QAAQ,oBAAoBF,aAGrC,MAAMG,EAASlD,EAAaC,EAASa,GAAYQ,KAAK,IACtDE,EAAQa,UAAYa,GACpB,EAAAX,EAAAS,c,CACA,MAAOG,GAEP,OADAC,QAAQC,IAAIF,GACLrD,EAAAqC,OAAOC,QAAQ,gD,EA9BxBkB,E,IArBF3B,EAAOC,iBAAiB,SAwBxB,SAAqBC,GACnBG,EAAAC,WAAWC,MAAQL,EAAE0B,OAAOC,MAAMC,M,IAvBpC3D,EAAAqC,OAAOuB,KAAK,CACVC,MAAO,QACPC,cAAc,IAmDhBnB,iBACE,IACE,MAAMC,QAAiBV,EAAAC,WAAW4B,iBAC5B/C,QAAmBkB,EAAAC,WAAWW,iBAC9B1C,KAAEA,GAASwC,GACXG,KAAEA,EAAI5C,QAAEA,EAAO6C,YAAEA,EAAWC,cAAEA,GAAkB7C,EAEtD,GAAuB,IAAnBD,EAAQoB,OAEV,OADA,EAAAkB,EAAAS,eACOlD,EAAAqC,OAAOC,QACZ,2EAIJ,MAAMc,EAASlD,EAAaC,EAASa,GAAYQ,KAAK,IACtDE,EAAQa,UAAYa,GACpB,EAAAX,EAAAS,c,CACA,MAAOG,GAGP,OAFA,EAAAZ,EAAAS,eACAI,QAAQC,IAAIF,GACLrD,EAAAqC,OAAOC,QAAQ,gD,EApE1B0B,IACA,EAAAvB,EAAAC","sources":["src/js/searchMovies.js","src/js/markUp.js"],"sourcesContent":["import { Notify } from 'notiflix';\nimport { ApiService } from './ApiServise';\nimport createMarkup from './markUp';\nimport { spinnerStart, spinnerStop } from './spinner';\n\nconst gallery = document.querySelector('.movies');\nconst formEl = document.querySelector('.js-form');\n\nformEl.addEventListener('submit', onFormSubmit);\nformEl.addEventListener('input', onFormInput);\n\nNotify.init({\n  width: '400px',\n  clickToClose: true,\n});\n\nfetchTrendMovies();\nspinnerStart();\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  formEl.reset();\n\n  if (ApiService.query === '') {\n    return Notify.failure('Please insert the name of the movie.');\n  }\n\n  gallery.innerHTML = '';\n  ApiService.resetPage();\n  spinnerStart();\n  fetchMovies();\n}\n\nfunction onFormInput(e) {\n  ApiService.query = e.target.value.trim();\n}\n\nasync function fetchMovies() {\n  try {\n    const response = await ApiService.getMoviesByName();\n    const genresList = await ApiService.getGenresList();\n    const { data } = response;\n    const { page, results, total_pages, total_results } = data;\n\n    if (results.length === 0) {\n      spinnerStop();\n      return Notify.failure(\n        'Sorry, there are no movies matching your search query. Please try again.'\n      );\n    }\n\n    if (total_results !== 0) {\n      Notify.success(`Hooray! We found ${total_results} movies.`);\n    }\n\n    const markUp = createMarkup(results, genresList).join('');\n    gallery.innerHTML = markUp;\n    spinnerStop();\n  } catch (error) {\n    console.log(error);\n    return Notify.failure('Something went wrong. Please try again later.');\n  }\n}\n\nasync function fetchTrendMovies() {\n  try {\n    const response = await ApiService.getTrendMovies();\n    const genresList = await ApiService.getGenresList();\n    const { data } = response;\n    const { page, results, total_pages, total_results } = data;\n\n    if (results.length === 0) {\n      spinnerStop();\n      return Notify.failure(\n        'Trending movies are not available. Please insert the name of the movie.'\n      );\n    }\n\n    const markUp = createMarkup(results, genresList).join('');\n    gallery.innerHTML = markUp;\n    spinnerStop();\n  } catch (error) {\n    spinnerStop();\n    console.log(error);\n    return Notify.failure('Something went wrong. Please try again later.');\n  }\n}\n\nasync function findMovieTrailer(id) {\n  try {\n    const response = await ApiService.getMovieTreiler(id);\n    const { data } = response;\n\n    console.log(data.results);\n\n    const videoKey = data.results.find(\n      result => result.type === 'Trailer' && result.official\n    ).key;\n    console.log(videoKey);\n\n    const iFrame = `<iframe id=\"player\" type=\"text/html\" width=\"640\" height=\"360\"\n        src=\"http://www.youtube.com/embed/${videoKey}?enablejsapi=1&origin=http://example.com\"\n        frameborder=\"0\"></iframe>`;\n\n    videoPlayer.innerHTML = iFrame;\n\n    // if (results.length === 0) {\n    //     spinnerStop()\n    //     return Notify.failure('Trending movies are not available. Please insert the name of the movie.');\n    // }\n\n    // const markUp = createMarkup(results, genresList).join('');\n    // gallery.innerHTML =  markUp;\n    // spinnerStop()\n  } catch (error) {\n    spinnerStop();\n    console.log(error);\n    return Notify.failure('Something went wrong. Please try again later.');\n  }\n}\n\n// findMovieTrailer(615777)\n\n// const videoPlayer = document.getElementById('ppp');\n// // console.log(videoPlayer);\n\n// const iFrame = `<iframe id=\"player\" type=\"text/html\" width=\"640\" height=\"360\"\n//   src=\"http://www.youtube.com/embed/QXhCu0o79kY?enablejsapi=1&origin=http://example.com\"\n//   frameborder=\"0\"></iframe>`\n\n//   videoPlayer.innerHTML = iFrame;\n","export default function createMarkup(results, { data }) {\n\n  const defaultImage = `./src/images/mobile-poster-filler.jpeg`; ///////////\n\n    return results.map(result => {\n      const { genre_ids, poster_path, release_date, title, vote_average, id } = result;\n      const posterLink = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n      const releaseYear = release_date.slice(0, 4);\n      const genresList = data.genres.filter(genre => genre_ids.includes(genre.id))\n      .map(item => item.name);\n      const genres = genresList.length > 2 ? [genresList[0], genresList[1], 'Other'].join(', ') : genresList.join(', ');\n      const voteAverage = vote_average.toFixed(1);\n\n     return `\n     <li class=\"movies__item\" id=${id}>\n        <div class=\"movies__wrapper\">\n        <img onerror=\"this.onerror=null;this.src=${defaultImage};\"\n         alt=\"Titanic\" src=${posterLink} class=\"movies__poster\" loading=\"lazy\">\n        </div>\n        <div class=\"movies__meta\">\n          <h2 class=\"movies__title\">${title}</h2>\n          <div class=\"movies__desc\">\n            <span class=\"movies__desc-genres\">${genres}</span>|\n            <span class=\"movies__desc-release-year\">${releaseYear}</span>\n            <span class=\"movies__vote is-hidden\">${voteAverage}</span>\n          </div>\n        </div>\n      </li>`;\n     })\n }     \n"],"names":["$7Y9D8","parcelRequire","$ecc0c8bcf37892e8$export$2e2bcd8739ae039","results","data","map","result","genre_ids","poster_path","release_date","title","vote_average","id","posterLink","releaseYear","slice","genresList","genres","filter","genre","includes","item","name","length","join","toFixed","$4a9ea052b238628e$var$gallery","document","querySelector","$4a9ea052b238628e$var$formEl","addEventListener","e","preventDefault","reset","$cnvsZ","ApiService","query","Notify","failure","innerHTML","resetPage","$04jNI","spinnerStart","async","response","getMoviesByName","getGenresList","page","total_pages","total_results","spinnerStop","success","markUp","error","console","log","$4a9ea052b238628e$var$fetchMovies","target","value","trim","init","width","clickToClose","getTrendMovies","$4a9ea052b238628e$var$fetchTrendMovies"],"version":3,"file":"index.ab0e384a.js.map"}