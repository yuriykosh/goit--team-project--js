{"mappings":"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","sources":["src/js/spinner.js","node_modules/spin.js/spin.js"],"sourcesContent":["import { Spinner } from 'spin.js';\n\nconst backdropEl = document.querySelector('.backdrop');\n\nconst opts = {\n  lines: 12, // The number of lines to draw\n  length: 80, // The length of each line\n  width: 22, // The line thickness\n  radius: 67, // The radius of the inner circle\n  scale: 0.75, // Scales overall size of the spinner\n  corners: 0.8, // Corner roundness (0..1)\n  speed: 1, // Rounds per second\n  rotate: 48, // The rotation offset\n  animation: 'spinner-line-fade-more', // The CSS animation name for the lines\n  direction: 1, // 1: clockwise, -1: counterclockwise\n  color: '#ff6b08', // CSS color or array of colors\n  fadeColor: 'transparent', // CSS color or array of colors\n  top: '50%', // Top position relative to parent\n  left: '50%', // Left position relative to parent\n  shadow: '100 10 20px transparent', // Box-shadow for the lines\n  zIndex: 2000000000, // The z-index (defaults to 2e9)\n  className: 'spinner', // The CSS class to assign to the spinner\n  position: 'absolute', // Element positioning\n};\n\nconst target = document.querySelector('.spinner');\nconst spinner = new Spinner(opts);\n\nexport function spinnerStart() {\n  spinner.spin(target);\n  backdropEl.classList.remove('is-hidden');\n}\n\nexport function spinnerStop() {\n  spinner.stop();\n  backdropEl.classList.add('is-hidden');\n}\n","var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar defaults = {\r\n    lines: 12,\r\n    length: 7,\r\n    width: 5,\r\n    radius: 10,\r\n    scale: 1.0,\r\n    corners: 1,\r\n    color: '#000',\r\n    fadeColor: 'transparent',\r\n    animation: 'spinner-line-fade-default',\r\n    rotate: 0,\r\n    direction: 1,\r\n    speed: 1,\r\n    zIndex: 2e9,\r\n    className: 'spinner',\r\n    top: '50%',\r\n    left: '50%',\r\n    shadow: '0 0 1px transparent',\r\n    position: 'absolute',\r\n};\r\nvar Spinner = /** @class */ (function () {\r\n    function Spinner(opts) {\r\n        if (opts === void 0) { opts = {}; }\r\n        this.opts = __assign(__assign({}, defaults), opts);\r\n    }\r\n    /**\r\n     * Adds the spinner to the given target element. If this instance is already\r\n     * spinning, it is automatically removed from its previous target by calling\r\n     * stop() internally.\r\n     */\r\n    Spinner.prototype.spin = function (target) {\r\n        this.stop();\r\n        this.el = document.createElement('div');\r\n        this.el.className = this.opts.className;\r\n        this.el.setAttribute('role', 'progressbar');\r\n        css(this.el, {\r\n            position: this.opts.position,\r\n            width: 0,\r\n            zIndex: this.opts.zIndex,\r\n            left: this.opts.left,\r\n            top: this.opts.top,\r\n            transform: \"scale(\" + this.opts.scale + \")\",\r\n        });\r\n        if (target) {\r\n            target.insertBefore(this.el, target.firstChild || null);\r\n        }\r\n        drawLines(this.el, this.opts);\r\n        return this;\r\n    };\r\n    /**\r\n     * Stops and removes the Spinner.\r\n     * Stopped spinners may be reused by calling spin() again.\r\n     */\r\n    Spinner.prototype.stop = function () {\r\n        if (this.el) {\r\n            if (typeof requestAnimationFrame !== 'undefined') {\r\n                cancelAnimationFrame(this.animateId);\r\n            }\r\n            else {\r\n                clearTimeout(this.animateId);\r\n            }\r\n            if (this.el.parentNode) {\r\n                this.el.parentNode.removeChild(this.el);\r\n            }\r\n            this.el = undefined;\r\n        }\r\n        return this;\r\n    };\r\n    return Spinner;\r\n}());\r\nexport { Spinner };\r\n/**\r\n * Sets multiple style properties at once.\r\n */\r\nfunction css(el, props) {\r\n    for (var prop in props) {\r\n        el.style[prop] = props[prop];\r\n    }\r\n    return el;\r\n}\r\n/**\r\n * Returns the line color from the given string or array.\r\n */\r\nfunction getColor(color, idx) {\r\n    return typeof color == 'string' ? color : color[idx % color.length];\r\n}\r\n/**\r\n * Internal method that draws the individual lines.\r\n */\r\nfunction drawLines(el, opts) {\r\n    var borderRadius = (Math.round(opts.corners * opts.width * 500) / 1000) + 'px';\r\n    var shadow = 'none';\r\n    if (opts.shadow === true) {\r\n        shadow = '0 2px 4px #000'; // default shadow\r\n    }\r\n    else if (typeof opts.shadow === 'string') {\r\n        shadow = opts.shadow;\r\n    }\r\n    var shadows = parseBoxShadow(shadow);\r\n    for (var i = 0; i < opts.lines; i++) {\r\n        var degrees = ~~(360 / opts.lines * i + opts.rotate);\r\n        var backgroundLine = css(document.createElement('div'), {\r\n            position: 'absolute',\r\n            top: -opts.width / 2 + \"px\",\r\n            width: (opts.length + opts.width) + 'px',\r\n            height: opts.width + 'px',\r\n            background: getColor(opts.fadeColor, i),\r\n            borderRadius: borderRadius,\r\n            transformOrigin: 'left',\r\n            transform: \"rotate(\" + degrees + \"deg) translateX(\" + opts.radius + \"px)\",\r\n        });\r\n        var delay = i * opts.direction / opts.lines / opts.speed;\r\n        delay -= 1 / opts.speed; // so initial animation state will include trail\r\n        var line = css(document.createElement('div'), {\r\n            width: '100%',\r\n            height: '100%',\r\n            background: getColor(opts.color, i),\r\n            borderRadius: borderRadius,\r\n            boxShadow: normalizeShadow(shadows, degrees),\r\n            animation: 1 / opts.speed + \"s linear \" + delay + \"s infinite \" + opts.animation,\r\n        });\r\n        backgroundLine.appendChild(line);\r\n        el.appendChild(backgroundLine);\r\n    }\r\n}\r\nfunction parseBoxShadow(boxShadow) {\r\n    var regex = /^\\s*([a-zA-Z]+\\s+)?(-?\\d+(\\.\\d+)?)([a-zA-Z]*)\\s+(-?\\d+(\\.\\d+)?)([a-zA-Z]*)(.*)$/;\r\n    var shadows = [];\r\n    for (var _i = 0, _a = boxShadow.split(','); _i < _a.length; _i++) {\r\n        var shadow = _a[_i];\r\n        var matches = shadow.match(regex);\r\n        if (matches === null) {\r\n            continue; // invalid syntax\r\n        }\r\n        var x = +matches[2];\r\n        var y = +matches[5];\r\n        var xUnits = matches[4];\r\n        var yUnits = matches[7];\r\n        if (x === 0 && !xUnits) {\r\n            xUnits = yUnits;\r\n        }\r\n        if (y === 0 && !yUnits) {\r\n            yUnits = xUnits;\r\n        }\r\n        if (xUnits !== yUnits) {\r\n            continue; // units must match to use as coordinates\r\n        }\r\n        shadows.push({\r\n            prefix: matches[1] || '',\r\n            x: x,\r\n            y: y,\r\n            xUnits: xUnits,\r\n            yUnits: yUnits,\r\n            end: matches[8],\r\n        });\r\n    }\r\n    return shadows;\r\n}\r\n/**\r\n * Modify box-shadow x/y offsets to counteract rotation\r\n */\r\nfunction normalizeShadow(shadows, degrees) {\r\n    var normalized = [];\r\n    for (var _i = 0, shadows_1 = shadows; _i < shadows_1.length; _i++) {\r\n        var shadow = shadows_1[_i];\r\n        var xy = convertOffset(shadow.x, shadow.y, degrees);\r\n        normalized.push(shadow.prefix + xy[0] + shadow.xUnits + ' ' + xy[1] + shadow.yUnits + shadow.end);\r\n    }\r\n    return normalized.join(', ');\r\n}\r\nfunction convertOffset(x, y, degrees) {\r\n    var radians = degrees * Math.PI / 180;\r\n    var sin = Math.sin(radians);\r\n    var cos = Math.cos(radians);\r\n    return [\r\n        Math.round((x * cos + y * sin) * 1000) / 1000,\r\n        Math.round((-x * sin + y * cos) * 1000) / 1000,\r\n    ];\r\n}\r\n"],"names":["$dCvm9","parcelRequire","$00cfbbdd8a53f936$var$backdropEl","document","querySelector","$00cfbbdd8a53f936$var$target","$00cfbbdd8a53f936$var$spinner","Spinner","lines","length","width","radius","scale","corners","speed","rotate","animation","direction","color","fadeColor","top","left","shadow","zIndex","className","position","$00cfbbdd8a53f936$export$93a4a30a9d273658","spin","classList","remove","$00cfbbdd8a53f936$export$b0293130610857b9","stop","add","$9ea725aae8e0ad5d$var$__assign","Object","assign","t","s","i","n","arguments","p","prototype","hasOwnProperty","call","apply","this","$9ea725aae8e0ad5d$var$defaults","$9ea725aae8e0ad5d$export$7f7cbe89f1eacd2","Spinner1","opts","target","el","createElement","setAttribute","transform","insertBefore","firstChild","Math","round","shadows","boxShadow","regex","_i","_a","split","matches","match","x","y","xUnits","yUnits","push","prefix","end","$9ea725aae8e0ad5d$var$parseBoxShadow","degrees","backgroundLine","$9ea725aae8e0ad5d$var$css","height","background","$9ea725aae8e0ad5d$var$getColor","borderRadius","transformOrigin","delay","line","$9ea725aae8e0ad5d$var$normalizeShadow","appendChild","$9ea725aae8e0ad5d$var$drawLines","requestAnimationFrame","cancelAnimationFrame","animateId","clearTimeout","parentNode","removeChild","undefined","props","prop","style","idx","normalized","shadows_1"],"version":3,"file":"index.1972db09.js.map"}