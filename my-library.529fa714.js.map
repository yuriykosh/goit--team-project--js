{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,uCAGAC,aAAaC,QADO,QACc,KAElC,IAAMC,EAAO,CACTC,QAASC,SAASC,cAAc,mBAChCC,OAAQF,SAASC,cAAc,kBAC/BE,UAAWH,SAASC,cAAc,Y,SA6DvBG,I,OAAAA,EAAfC,EAAAX,EAAA,CAAAW,EAAAC,GAAAC,MAAA,SAAAC,EAA4BC,G,IAGdC,EACEC,E,yEAHZC,QAAQC,IAAI,S,kBAEeC,EAAAC,WAAWC,cAAcP,G,OAA1CC,EAAQO,EAAAC,KACRP,EAAWD,EAATC,KAERC,QAAQC,IAAIF,GACZQ,aAAaR,G,yDAKbC,QAAQC,IAAGI,EAAAG,I,kBACJC,EAAAC,OAAOC,QAAQ,kD,2DAbHC,MAAAC,KAAAC,U,CAxD3B5B,EAAKC,QAAQ4B,iBAAiB,SAE9B,SAAwBC,GA0ErB9B,EAAKK,UAAU0B,UAAY,GA1D9B/B,EAAKK,UAAU2B,mBAAmB,YAblB,ojB,aAmDYrB,GAAbL,EAAYoB,MAAAC,KAAAC,U,CAiB1BK,CAAa,O","sources":["src/js/watchedQueuedList.js"],"sourcesContent":["import { Notify } from 'notiflix';\nimport { ApiService } from './ApiServise';\nconst STORAGE_KEY = 'movie';\nlocalStorage.setItem(STORAGE_KEY, 520);\n\nconst refs = {\n    watched: document.querySelector('.button-watched'), \n    queued: document.querySelector('.button-queued'), \n    movieList: document.querySelector('.movies'), \n}\n\nconst userId = 5;\n\nrefs.watched.addEventListener('click', onWatchedClick);\n\nfunction onWatchedClick(event) {\n   if (userId === 5) {\nclearMovieList();   \nconst markUp = `<li class=\"movies__item\">\n        <div class=\"movies__wrapper\">\n          <img loading=\"lazy\" class=\"movies__poster\" src=\"/mobile-poster-filler.68d38ad9.jpeg\" alt=\"movies__poster\">\n        </div>\n        <div class=\"movies__meta\">\n          <h2 class=\"movies__title\">Monster Hunter</h2>\n          <div class=\"movies__desc\">\n            <span class=\"movies__desc-genres\">Drama, Action</span>|\n            <span class=\"movies__desc-release-year\">2020</span>\n            <span class=\"movies__vote\">8.3</span>\n          </div>\n        </div>\n      </li>`;\nrefs.movieList.insertAdjacentHTML('beforeend', markUp);\n} \n}\n\nexport default function createMovieMarkup(results) {\n    return results.map(result => {\n      const { genre_ids, poster_path, release_date, title, vote_average } = result;\n      const posterLink = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n      const releaseYear = release_date.slice(0, 4);\n      const genresList = data.genres.filter(genre => genre_ids.includes(genre.id))\n      .map(item => item.name);\n      const genres = genresList.length > 2 ? [genresList[0], genresList[1], 'Other'].join(', ') : genresList.join(', ');\n      const defaultImage = \"/src/images/mobile-poster-filler.jpeg\";\n      const voteAverage = vote_average.toFixed(1);\n\n     return `\n     <li class=\"movies__item\">\n        <div class=\"movies__wrapper\">\n          <img\n            loading=\"lazy\"\n            class=\"movies__poster\"\n            src=${posterLink}\n            onerror=${defaultImage}\n            alt=${title}\n          />\n        </div>\n        <div class=\"movies__meta\">\n          <h2 class=\"movies__title\">${title}</h2>\n          <div class=\"movies__desc\">\n            <span class=\"movies__desc-genres\">${genres}</span>|\n            <span class=\"movies__desc-release-year\">${releaseYear}</span>\n            <span class=\"movies__vote is-hidden\">${voteAverage}</span>\n          </div>\n        </div>\n      </li>`;\n     })\n }     \n\nasync function watchedMovie(id) {\n    console.log('hello')\n    try { \n        const response = await ApiService.getMoviesById(id);\n        const { data } = response;\n\n        console.log(data);\n        createMarkup(data); \n\n    }\n    catch(error) {\n     \n        console.log(error);\n        return Notify.failure('Something went wrong. Please try again later.');\n    }\n}\n \n watchedMovie(505642)\n\nfunction clearMovieList(){\n   refs.movieList.innerHTML = \"\"; \n}"],"names":["$bpxeT","parcelRequire","localStorage","setItem","$3e16c4773508b628$var$refs","watched","document","querySelector","queued","movieList","$3e16c4773508b628$var$_watchedMovie","$parcel$interopDefault","$2TvXO","mark","_callee","id","response","data","console","log","$2nBDz","ApiService","getMoviesById","_ctx","sent","createMarkup","t0","$6JpON","Notify","failure","apply","this","arguments","addEventListener","event","innerHTML","insertAdjacentHTML","$3e16c4773508b628$var$watchedMovie"],"version":3,"file":"my-library.529fa714.js.map"}