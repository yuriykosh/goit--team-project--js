{"mappings":"kpBAsBA,IAAAA,EACAC,E,iJArBA,IAAIC,EAAU,GAoBdF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,G,EAelCL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,C,KCnBTE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,2GCAzD,I,EAAAC,EAAAJ,EAAA,S,aCAAK,EAAiB,IAAAC,IAAoBN,EAAA,SAAAO,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,WDK5FC,aAAaC,QADO,QACc,KAElC,MAAMC,EAAO,CACTC,QAASC,SAASC,cAAc,mBAChCC,OAAQF,SAASC,cAAc,kBAC/BE,UAAWH,SAASC,cAAc,YAgHtC,SAASG,IACNN,EAAKK,UAAUE,UAAY,E,CA9G9BP,EAAKC,QAAQO,iBAAiB,SAG9B,SAAwBC,GACxBH,IAeM,IAAKI,SAAS5B,OAKhB,YAJAkB,EAAKW,OAAOJ,UAAY,mCAERK,EAAArB,gDAIpBS,EAAKK,UAAUQ,mBAAmB,YArBnB,ojB,IAJfb,EAAKI,OAAOI,iBAAiB,SAiF7B,SAAuBC,GACvBH,IAeM,IAAKQ,WAAWhC,OAKlB,YAJAkB,EAAKW,OAAOJ,UAAY,mCAERK,EAAArB,gDAIpBS,EAAKK,UAAUQ,mBAAmB,YArBnB,ojB,IArBfE,eAA4BhC,GACxBiC,QAAQC,IAAI,SACZ,IACI,MAAMC,QAAiBC,EAAAC,WAAWC,cAActC,IAC1CuC,KAAEA,GAASJ,EAEjBF,QAAQC,IAAIK,GACZC,aAAaD,E,CAGjB,MAAME,GAGF,OADAR,QAAQC,IAAIO,GACLlC,EAAAmC,OAAOC,QAAQ,gD,EAI7BC,CAAa","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-9ac1757056bf2672.js","src/js/watchedQueuedList.js","node_modules/@parcel/runtime-js/lib/runtime-c578acf25ab98737.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"aHTdj\\\":\\\"my-library.d9351df0.js\\\",\\\"32lSb\\\":\\\"empty-list.42b24b97.gif\\\"}\"));","import { Notify } from 'notiflix';\nimport { ApiService } from './ApiServise';\nimport empty from '../images/empty-list.gif';\n\nconst STORAGE_KEY = 'movie';\nlocalStorage.setItem(STORAGE_KEY, 520);\n\nconst refs = {\n    watched: document.querySelector('.button-watched'), \n    queued: document.querySelector('.button-queued'), \n    movieList: document.querySelector('.movies'), \n}\n\nrefs.watched.addEventListener('click', onWatchedClick);\nrefs.queued.addEventListener('click', onQueuedClick);\n\nfunction onWatchedClick(event) {\nclearMovieList();   \nconst markUp = `<li class=\"movies__item\">\n        <div class=\"movies__wrapper\">\n          <img loading=\"lazy\" class=\"movies__poster\" src=\"/mobile-poster-filler.68d38ad9.jpeg\" alt=\"movies__poster\">\n        </div>\n        <div class=\"movies__meta\">\n          <h2 class=\"movies__title\">Monster Hunter</h2>\n          <div class=\"movies__desc\">\n            <span class=\"movies__desc-genres\">Drama, Action</span>|\n            <span class=\"movies__desc-release-year\">2020</span>\n            <span class=\"movies__vote\">8.3</span>\n          </div>\n        </div>\n      </li>`;\n\n      if (!arrMovie.length) {\n    refs.movies.innerHTML = `\n      <li>\n        <img src=\"${empty}\" alt=\"The list is empty.\" />\n      </li>`;\n    return;\n  }\nrefs.movieList.insertAdjacentHTML('beforeend', markUp);\n}\n\nexport default function createMovieMarkup(results) {\n    return results.map(result => {\n      const { genre_ids, poster_path, release_date, title, vote_average } = result;\n      const posterLink = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n      const releaseYear = release_date.slice(0, 4);\n      const genresList = data.genres.filter(genre => genre_ids.includes(genre.id))\n      .map(item => item.name);\n      const genres = genresList.length > 2 ? [genresList[0], genresList[1], 'Other'].join(', ') : genresList.join(', ');\n      const defaultImage = \"/src/images/mobile-poster-filler.jpeg\";\n      const voteAverage = vote_average.toFixed(1);\n\n     return `\n     <li class=\"movies__item\">\n        <div class=\"movies__wrapper\">\n          <img\n            loading=\"lazy\"\n            class=\"movies__poster\"\n            src=${posterLink}\n            onerror=${defaultImage}\n            alt=${title}\n          />\n        </div>\n        <div class=\"movies__meta\">\n          <h2 class=\"movies__title\">${title}</h2>\n          <div class=\"movies__desc\">\n            <span class=\"movies__desc-genres\">${genres}</span>|\n            <span class=\"movies__desc-release-year\">${releaseYear}</span>\n            <span class=\"movies__vote is-hidden\">${voteAverage}</span>\n          </div>\n        </div>\n      </li>`;\n     })\n }     \n\nasync function watchedMovie(id) {\n    console.log('hello')\n    try { \n        const response = await ApiService.getMoviesById(id);\n        const { data } = response;\n\n        console.log(data);\n        createMarkup(data); \n\n    }\n    catch(error) {\n     \n        console.log(error);\n        return Notify.failure('Something went wrong. Please try again later.');\n    }\n}\n \n watchedMovie(505642)\n\nfunction onQueuedClick(event) {\nclearMovieList();   \nconst markUp = `<li class=\"movies__item\">\n        <div class=\"movies__wrapper\">\n          <img loading=\"lazy\" class=\"movies__poster\" src=\"/mobile-poster-filler.68d38ad9.jpeg\" alt=\"movies__poster\">\n        </div>\n        <div class=\"movies__meta\">\n          <h2 class=\"movies__title\">Monster Hunter</h2>\n          <div class=\"movies__desc\">\n            <span class=\"movies__desc-genres\">Drama, Action</span>|\n            <span class=\"movies__desc-release-year\">2020</span>\n            <span class=\"movies__vote\">8.3</span>\n          </div>\n        </div>\n      </li>`;\n      \n      if (!queueMovie.length) {\n    refs.movies.innerHTML = `\n      <li>\n        <img src=\"${empty}\" alt=\"The list is empty.\" />\n      </li>`;\n    return;\n  }\nrefs.movieList.insertAdjacentHTML('beforeend', markUp);\n}\n\n\nfunction clearMovieList(){\n   refs.movieList.innerHTML = \"\"; \n}","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"32lSb\")).toString();"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$7Y9D8","$734b9ce990a5e2e3$exports","URL","resolve","import","meta","url","toString","localStorage","setItem","$f9e64c9db0cf690d$var$refs","watched","document","querySelector","queued","movieList","$f9e64c9db0cf690d$var$clearMovieList","innerHTML","addEventListener","event","arrMovie","movies","$parcel$interopDefault","insertAdjacentHTML","queueMovie","async","console","log","response","$cnvsZ","ApiService","getMoviesById","data","createMarkup","error","Notify","failure","$f9e64c9db0cf690d$var$watchedMovie"],"version":3,"file":"my-library.d9351df0.js.map"}